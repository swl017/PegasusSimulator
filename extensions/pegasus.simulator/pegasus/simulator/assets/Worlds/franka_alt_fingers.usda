#usda 1.0
(
    customLayerData = {
        dictionary audioSettings = {
            double dopplerLimit = 2
            double dopplerScale = 1
            double nonSpatialTimeScale = 1
            double spatialTimeScale = 1
            double speedOfSound = 340
        }
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (1000.0000000000009, -2.2204460492503146e-13, 0)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (4.196099770436504, 4.196099770435833, 4.19609978962341)
                double radius = 808.1671358505605
                double3 target = (-3.9780810645595466e-8, -3.978148033212392e-8, 7.955957226357668e-8)
            }
            dictionary Right = {
                double3 position = (0, -1000, -2.220446049250313e-13)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (0, 0, 1000)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary navmeshSettings = {
            double agentHeight = 180
            double agentRadius = 20
            bool excludeRigidBodies = 1
            int ver = 1
            double voxelCeiling = 460
        }
        dictionary omni_layer = {
            string authoring_layer = "./franka_alt_fingers.usd"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            float3 "rtx:fog:fogColor" = (0.75, 0.75, 0.75)
            float3 "rtx:index:backgroundColor" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMax" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMin" = (0, 0, 0)
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            double "rtx:post:lensDistortion:cameraFocalLength" = 18.14756202697754
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2, 2, 2)
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            float3 "rtx:post:lensFlares:spectralBlurWavelengthRange" = (380, 550, 770)
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:indexdirect:svoBrickSize" = (32, 32, 32)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
            float2 "rtx:viewTile:resolution" = (0, 0)
        }
    }
    defaultPrim = "panda"
    metersPerUnit = 1
    timeCodesPerSecond = 60
    upAxis = "Z"
)

def Xform "World" (
    active = true
)
{
    custom string cmd_path = ""

    def DistantLight "defaultLight" (
        prepend apiSchemas = ["ShapingAPI"]
        kind = "model"
    )
    {
        float angle = 1
        float intensity = 3000
        float shaping:cone:angle = 180
        float shaping:cone:softness
        float shaping:focus
        color3f shaping:focusTint
        asset shaping:ies:file
        float3 xformOp:rotateZYX = (0, 45, 0)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX"]
    }
}

def Xform "panda" (
    prepend apiSchemas = ["PhysxArticulationAPI", "PhysicsArticulationRootAPI"]
    instanceable = false
)
{
    bool physxArticulation:enabledSelfCollisions = 0
    float physxArticulation:sleepThreshold = 0.005
    int physxArticulation:solverPositionIterationCount = 32
    int physxArticulation:solverVelocityIterationCount = 32
    float physxArticulation:stabilizationThreshold = 0.0009999999
    double3 xformOp:rotateXYZ = (0, 0, 0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

    def Xform "panda_link0" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.0000012988697, 0.0000016535528, 0.0000020331163)
        bool physics:kinematicEnabled = 0
        float physics:mass = 2.8142028
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-4.529953e-8, -1.8347054e-9, -2.8610229e-8)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint1" (
            prepend apiSchemas = ["PhysxJointAPI", "PhysxLimitAPI:angular", "PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 5220
            float drive:angular:physics:stiffness = 1047.1975
            float drive:angular:physics:targetPosition = 0.68754935
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link0>
            rel physics:body1 = </panda/panda_link1>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.33299997)
            point3f physics:localPos1 = (-1.2042e-8, 4.3702313e-9, 3.8146972e-8)
            quatf physics:localRot0 = (0.7071068, 0, -0.7071067, 0)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071067, 0)
            custom float physics:lowerLimit = -166.00307
            custom float physics:upperLimit = 166.00307
            bool physxJoint:enableProjection = 0
            float physxJoint:jointFriction = 0
            float physxJoint:maxJointVelocity = 572.9578
            float physxLimit:angular:bounceThreshold = 0
            float physxLimit:angular:contactDistance = 0
            float physxLimit:angular:damping = 0
            float physxLimit:angular:restitution = 0
            float physxLimit:angular:stiffness = 0
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link0.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID3_000" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (3.42285375507818e-8, -0.9999998408005263, 0, 0), (0.9999998408005263, 3.42285375507818e-8, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID3_000frA" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 105, 162, 84, 94, 166, 240, 201, 159, 48, 49, 117, 9, 83, 12, 173, 248, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 48, 128, 0, 0, 18, 0, 0, 0, 96, 0, 0, 0, 102, 175, 193, 61, 32, 117, 173, 59, 0, 0, 16, 181, 102, 175, 193, 61, 0, 0, 96, 181, 0, 0, 16, 181, 102, 175, 193, 61, 48, 16, 143, 59, 0, 222, 64, 59, 109, 152, 68, 61, 192, 102, 246, 188, 35, 15, 20, 62, 188, 25, 102, 61, 128, 250, 82, 60, 36, 15, 20, 62, 0, 96, 236, 58, 174, 199, 29, 190, 0, 0, 16, 181, 59, 96, 101, 189, 48, 128, 39, 60, 36, 15, 20, 62, 6, 168, 95, 189, 0, 83, 64, 59, 36, 15, 20, 62, 64, 207, 232, 187, 80, 136, 146, 61, 0, 0, 16, 181, 58, 96, 7, 189, 190, 234, 64, 61, 36, 15, 20, 62, 50, 132, 21, 189, 60, 5, 37, 189, 36, 15, 20, 62, 128, 174, 197, 187, 154, 239, 88, 189, 36, 15, 20, 62, 0, 75, 146, 186, 118, 199, 215, 189, 138, 137, 181, 61, 8, 74, 10, 61, 174, 199, 29, 190, 0, 0, 16, 181, 48, 204, 9, 61, 173, 199, 29, 190, 48, 24, 94, 58, 118, 245, 141, 61, 233, 208, 7, 190, 0, 0, 16, 181, 180, 185, 117, 61, 146, 221, 10, 190, 160, 237, 253, 60, 8, 193, 99, 61, 83, 167, 13, 190, 8, 168, 246, 60, 64, 62, 20, 189, 183, 184, 132, 61, 0, 0, 16, 181, 104, 175, 193, 189, 0, 0, 72, 181, 0, 0, 16, 181, 228, 138, 191, 189, 72, 8, 132, 59, 128, 135, 212, 59, 168, 32, 98, 189, 11, 20, 104, 61, 96, 32, 240, 60, 0, 175, 126, 60, 80, 136, 146, 61, 0, 0, 16, 181, 96, 203, 9, 60, 80, 136, 146, 61, 112, 28, 231, 60, 42, 106, 133, 61, 132, 136, 60, 61, 0, 0, 16, 181, 140, 214, 12, 61, 236, 76, 48, 61, 36, 15, 20, 62, 144, 27, 3, 60, 198, 230, 103, 61, 36, 15, 20, 62, 208, 116, 254, 188, 179, 73, 29, 190, 255, 255, 15, 181, 77, 71, 141, 189, 112, 198, 8, 190, 0, 0, 16, 181, 61, 138, 96, 189, 88, 143, 12, 190, 88, 105, 232, 60, 121, 210, 136, 189, 48, 231, 8, 190, 0, 138, 251, 59, 176, 216, 92, 189, 212, 16, 13, 190, 96, 84, 231, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 16, 181, 0, 0, 12, 4, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 174, 199, 29, 190, 12, 0, 3, 8, 0, 0, 0, 128, 0, 0, 128, 63, 0, 0, 0, 0, 80, 136, 146, 189, 15, 0, 3, 5, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 128, 102, 175, 193, 189, 18, 0, 3, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 36, 15, 20, 190, 21, 0, 9, 0, 65, 172, 148, 62, 118, 129, 47, 191, 44, 231, 42, 63, 233, 58, 6, 190, 30, 0, 5, 18, 202, 228, 85, 191, 94, 37, 179, 190, 51, 232, 216, 62, 15, 200, 216, 189, 35, 0, 4, 0, 243, 16, 76, 63, 71, 109, 19, 63, 157, 212, 57, 62, 208, 162, 160, 189, 39, 0, 5, 28, 156, 213, 84, 191, 212, 116, 4, 63, 230, 145, 79, 62, 44, 53, 166, 189, 44, 0, 4, 15, 117, 82, 114, 63, 159, 148, 56, 190, 244, 234, 136, 62, 50, 86, 183, 189, 48, 0, 6, 19, 253, 250, 81, 188, 93, 95, 96, 191, 169, 110, 246, 62, 94, 67, 10, 190, 54, 0, 6, 22, 129, 104, 114, 191, 82, 195, 57, 190, 152, 231, 135, 62, 224, 102, 183, 189, 60, 0, 6, 0, 169, 129, 101, 190, 226, 123, 119, 63, 0, 110, 252, 61, 66, 235, 144, 189, 66, 0, 6, 13, 117, 61, 151, 190, 216, 202, 53, 191, 224, 156, 35, 63, 215, 246, 6, 190, 72, 0, 5, 22, 84, 227, 3, 63, 181, 157, 90, 191, 202, 92, 149, 61, 230, 140, 24, 190, 77, 0, 5, 21, 213, 97, 54, 191, 222, 76, 36, 63, 81, 77, 145, 190, 184, 252, 137, 189, 82, 0, 4, 16, 228, 178, 232, 62, 88, 32, 98, 63, 94, 97, 235, 61, 219, 230, 143, 189, 86, 0, 5, 27, 40, 127, 237, 190, 182, 204, 96, 191, 112, 254, 239, 61, 72, 223, 24, 190, 91, 0, 5, 24, 18, 8, 22, 24, 0, 1, 15, 13, 5, 27, 28, 19, 5, 13, 14, 22, 8, 23, 1, 0, 2, 9, 6, 7, 10, 11, 3, 4, 25, 26, 16, 3, 11, 12, 17, 29, 10, 7, 30, 2, 0, 24, 25, 4, 20, 6, 9, 21, 1, 2, 4, 3, 16, 15, 5, 14, 17, 12, 31, 27, 19, 28, 30, 7, 6, 20, 23, 8, 18, 21, 9, 26, 11, 10, 29, 31, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 24, 28, 27, 31, 29, 30, 0, 3, 3, 7, 0, 7, 3, 9, 0, 9, 7, 9, 4, 9, 4, 5, 5, 9, 4, 7, 0, 1, 1, 10, 0, 10, 4, 11, 4, 8, 8, 11, 4, 6, 6, 11, 0, 12, 0, 2, 2, 12, 8, 12, 4, 12, 4, 13, 6, 13, 5, 13, 5, 10, 10, 13, 1, 14, 0, 14, 10, 14, 9, 14, 5, 14, 0, 15, 12, 15, 11, 15, 0, 11, 8, 15, 2, 16, 0, 16, 12, 16, 7, 16, 4, 16, 0, 17, 10, 17, 11, 17, 6, 17, 13, 17, 0, 3, 7, 0, 3, 9, 3, 7, 9, 4, 5, 9, 4, 7, 9, 0, 1, 10, 4, 8, 11, 4, 6, 11, 0, 2, 12, 4, 8, 12, 4, 6, 13, 4, 5, 13, 5, 10, 13, 0, 1, 14, 1, 10, 14, 0, 9, 14, 5, 9, 14, 5, 10, 14, 0, 12, 15, 0, 11, 15, 8, 11, 15, 8, 12, 15, 0, 2, 16, 2, 12, 16, 0, 7, 16, 4, 7, 16, 4, 12, 16, 0, 10, 17, 0, 11, 17, 6, 13, 17, 6, 11, 17, 10, 13, 17, 0, 0, 1, 0, 0, 0, 2, 0, 24, 0, 0, 0, 2, 0, 1, 0, 1, 0, 15, 0, 4, 0, 2, 0, 3, 0, 4, 0, 11, 0, 3, 0, 16, 0, 3, 0, 4, 0, 25, 0, 13, 0, 5, 0, 14, 0, 5, 0, 5, 0, 27, 0, 6, 0, 7, 0, 9, 0, 6, 0, 20, 0, 6, 0, 7, 0, 10, 0, 7, 0, 30, 0, 18, 0, 8, 0, 8, 0, 22, 0, 8, 0, 23, 0, 9, 0, 21, 0, 26, 0, 9, 0, 10, 0, 11, 0, 29, 0, 10, 0, 11, 0, 12, 0, 12, 0, 17, 0, 12, 0, 31, 0, 13, 0, 14, 0, 15, 0, 13, 0, 14, 0, 17, 0, 16, 0, 15, 0, 17, 0, 16, 0, 19, 0, 18, 0, 18, 0, 21, 0, 20, 0, 19, 0, 28, 0, 19, 0, 21, 0, 20, 0, 23, 0, 22, 0, 22, 0, 24, 0, 26, 0, 23, 0, 24, 0, 25, 0, 25, 0, 26, 0, 27, 0, 28, 0, 31, 0, 27, 0, 28, 0, 30, 0, 30, 0, 29, 0, 29, 0, 31, 0, 0, 0, 0, 0, 104, 175, 193, 189, 174, 199, 29, 190, 0, 0, 16, 181, 102, 175, 193, 61, 80, 136, 146, 61, 36, 15, 20, 62, 120, 156, 70, 59, 254, 211, 206, 55, 42, 246, 176, 51, 44, 130, 91, 177, 42, 246, 176, 51, 161, 189, 161, 55, 112, 104, 99, 54, 44, 130, 91, 177, 112, 104, 99, 54, 103, 160, 115, 55, 160, 218, 217, 55, 79, 107, 225, 188, 176, 14, 108, 61, 0, 0, 128, 191, 0, 0, 128, 191, 64, 15, 108, 61, 0, 74, 8, 61, 211, 28, 122, 61, 0, 74, 8, 61]
                matrix4d xformOp:transform = ( (3.42285375507818e-8, -0.9999998408005263, 0, 0), (0.9999998408005263, 3.42285375507818e-8, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID3_000jEI" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (3.422853991590077e-8, -0.9999999098983833, 0, 0), (0.9999999098983833, 3.422853991590077e-8, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID3_000m4u" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (3.422853991590077e-8, -0.9999999098983833, 0, 0), (0.9999999098983833, 3.422853991590077e-8, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID3_000pR3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (3.422853991590077e-8, -0.9999999098983833, 0, 0), (0.9999999098983833, 3.422853991590077e-8, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "logo_decals" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                double3 xformOp:translate = (0, 0, 0)

                over "polySurface8" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (0.009999999776482582, 0, 0, 0), (0, -4.3711386643578496e-10, -0.009999999776482579, 0), (0, 0.009999999776482579, -4.3711386643578496e-10, 0), (0, 0, 4.76837147544984e-9, 1) )
                }
            }

            over "cables_connected"
            {
                double3 xformOp:translate = (0.5336492080720104, 0.00019776999557949602, 0.0007458599833287298)

                over "extrudedSurface1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (0.009999999776482582, 0, 0, 0), (0, -4.3711386643578496e-10, -0.009999999776482579, 0), (0, 0.009999999776482579, -4.3711386643578496e-10, 0), (0, 0, 0, 1) )
                }

                over "extrudedSurface2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (0.009999999776482582, 0, 0, 0), (0, -4.3711386643578496e-10, -0.009999999776482579, 0), (0, 0.009999999776482579, -4.3711386643578496e-10, 0), (0, 0, 0, 1) )
                }

                over "pCylinder1" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (0.0015492802512061523, -4.31836065827381e-10, -0.009879257458166976, 0), (-0.009879257458166976, -6.772119458430232e-11, -0.0015492802512061539, 0), (-3.974674173808969e-18, 0.00999999977648258, -4.371138698752446e-10, 0), (-0.08526492881927794, 0.04747660530783371, -0.6018697222649365, 1) )
                }

                over "pCylinder2" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (-0.0009212560176687044, 2.450905020815436e-10, 0.0056070171504536935, 0), (0.0035988005220265458, 2.5846446459400373e-11, 0.0005912977521458012, 0), (-1.5771261780076047e-18, 0.005682195894073036, -2.4837666978543377e-10, 0), (-0.07787122552384673, 0.03288507626462556, -0.5595794934128335, 1) )
                }
            }
        }
    }

    def Xform "panda_link1" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.0000018686388, 0.0000014378986, 9.06812e-7)
        bool physics:kinematicEnabled = 0
        float physics:mass = 2.3599997
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-2.2072344e-9, 9.298324e-8, 0.33300024)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint2" (
            prepend apiSchemas = ["PhysxJointAPI", "PhysxLimitAPI:angular", "PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 5220
            float drive:angular:physics:stiffness = 1047.1975
            float drive:angular:physics:targetPosition = -32.658596
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link1>
            rel physics:body1 = </panda/panda_link2>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0)
            point3f physics:localPos1 = (1.7415742e-9, -3.8147004e-8, 1.6689299e-8)
            quatf physics:localRot0 = (0.5, -0.5, -0.5, 0.5)
            quatf physics:localRot1 = (0.70710677, 1.1176425e-7, -0.70710677, -1.02451025e-7)
            custom float physics:lowerLimit = -101.001
            custom float physics:upperLimit = 101.001
            bool physxJoint:enableProjection = 0
            float physxJoint:jointFriction = 0
            float physxJoint:maxJointVelocity = 572.9578
            float physxLimit:angular:bounceThreshold = 0
            float physxLimit:angular:contactDistance = 0
            float physxLimit:angular:damping = 0
            float physxLimit:angular:restitution = 0
            float physxLimit:angular:stiffness = 0
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link1.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID3_000" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 244, 12, 136, 242, 213, 225, 228, 177, 121, 214, 109, 20, 224, 170, 242, 191, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 48, 128, 0, 0, 18, 0, 0, 0, 96, 0, 0, 0, 145, 148, 96, 61, 104, 132, 112, 60, 58, 31, 77, 62, 184, 73, 207, 187, 50, 127, 151, 189, 32, 110, 131, 60, 224, 173, 161, 187, 134, 109, 142, 61, 30, 93, 155, 59, 87, 151, 96, 61, 200, 114, 95, 60, 198, 103, 80, 62, 183, 81, 95, 189, 246, 126, 208, 189, 218, 64, 66, 62, 5, 66, 95, 189, 150, 84, 205, 189, 45, 15, 89, 62, 24, 178, 181, 188, 3, 100, 250, 189, 114, 154, 40, 62, 139, 200, 26, 189, 60, 128, 221, 189, 195, 24, 115, 62, 38, 15, 96, 189, 32, 103, 183, 60, 182, 120, 189, 47, 194, 253, 95, 189, 102, 241, 167, 188, 162, 247, 141, 47, 192, 19, 96, 61, 110, 37, 244, 188, 132, 68, 254, 175, 24, 252, 95, 61, 132, 194, 233, 60, 216, 166, 189, 175, 188, 58, 167, 188, 167, 236, 96, 61, 224, 245, 80, 47, 116, 50, 135, 60, 232, 78, 97, 61, 177, 79, 77, 174, 152, 104, 197, 187, 112, 9, 138, 189, 40, 49, 35, 175, 112, 148, 103, 60, 226, 99, 5, 190, 189, 215, 65, 62, 192, 231, 54, 187, 26, 166, 6, 190, 63, 181, 69, 62, 68, 152, 9, 61, 28, 93, 208, 189, 180, 43, 117, 62, 224, 180, 216, 188, 34, 62, 235, 189, 204, 218, 112, 62, 104, 76, 7, 61, 96, 174, 77, 59, 35, 124, 113, 62, 128, 150, 177, 188, 224, 124, 42, 187, 4, 198, 129, 62, 80, 48, 4, 61, 56, 155, 197, 189, 94, 235, 118, 62, 232, 193, 182, 188, 0, 16, 79, 189, 221, 31, 131, 62, 197, 181, 96, 61, 152, 8, 102, 189, 144, 95, 83, 62, 197, 140, 96, 61, 88, 50, 171, 189, 124, 146, 10, 62, 72, 251, 32, 61, 206, 215, 244, 189, 239, 94, 78, 62, 155, 129, 36, 61, 26, 136, 215, 189, 16, 125, 107, 62, 207, 179, 95, 189, 236, 236, 172, 60, 228, 187, 253, 61, 250, 111, 95, 189, 0, 18, 3, 186, 190, 95, 81, 62, 128, 179, 157, 58, 22, 61, 125, 61, 160, 12, 98, 61, 32, 101, 212, 188, 128, 17, 3, 186, 11, 236, 124, 62, 58, 0, 178, 187, 22, 36, 141, 61, 32, 2, 155, 60, 141, 129, 220, 177, 222, 71, 10, 49, 0, 0, 128, 191, 193, 79, 98, 174, 0, 0, 7, 22, 251, 255, 127, 63, 37, 194, 202, 57, 149, 70, 55, 186, 166, 7, 96, 189, 7, 0, 6, 27, 72, 38, 31, 57, 118, 120, 115, 191, 94, 55, 158, 190, 52, 237, 133, 189, 13, 0, 4, 29, 70, 38, 31, 185, 118, 120, 115, 63, 95, 55, 158, 62, 36, 89, 155, 189, 17, 0, 6, 1, 234, 158, 77, 186, 86, 55, 158, 62, 114, 120, 115, 191, 66, 36, 139, 188, 23, 0, 3, 7, 98, 159, 77, 58, 83, 55, 158, 190, 113, 120, 115, 63, 46, 178, 132, 190, 26, 0, 5, 2, 124, 200, 41, 191, 117, 40, 48, 191, 158, 180, 150, 190, 48, 86, 78, 189, 31, 0, 5, 3, 232, 161, 17, 63, 177, 11, 82, 63, 128, 194, 102, 61, 144, 81, 95, 189, 36, 0, 6, 4, 13, 73, 255, 62, 141, 45, 78, 191, 59, 31, 164, 190, 151, 10, 82, 189, 42, 0, 6, 28, 252, 44, 48, 191, 185, 185, 57, 63, 108, 162, 2, 60, 20, 185, 92, 189, 48, 0, 5, 25, 64, 56, 83, 63, 249, 215, 194, 60, 84, 132, 16, 63, 166, 78, 36, 190, 53, 0, 6, 9, 125, 49, 84, 191, 118, 107, 42, 61, 7, 209, 14, 63, 152, 21, 35, 190, 59, 0, 6, 10, 190, 230, 255, 190, 102, 49, 93, 191, 62, 254, 118, 61, 20, 177, 1, 190, 65, 0, 6, 2, 252, 255, 127, 191, 36, 194, 202, 185, 152, 70, 55, 58, 15, 6, 96, 189, 71, 0, 6, 0, 48, 28, 38, 62, 104, 36, 98, 191, 237, 33, 225, 62, 91, 106, 77, 190, 77, 0, 6, 2, 177, 144, 154, 62, 236, 82, 70, 61, 189, 189, 115, 63, 182, 73, 112, 190, 83, 0, 4, 9, 38, 24, 119, 63, 216, 249, 121, 190, 16, 209, 191, 61, 96, 30, 176, 189, 87, 0, 4, 8, 10, 21, 184, 190, 161, 181, 102, 63, 238, 202, 119, 62, 36, 147, 140, 189, 91, 0, 5, 15, 9, 8, 12, 13, 11, 10, 14, 0, 3, 23, 24, 10, 11, 6, 1, 15, 16, 19, 3, 0, 29, 30, 20, 12, 2, 13, 17, 21, 22, 7, 18, 4, 9, 14, 1, 6, 0, 11, 13, 2, 31, 29, 10, 24, 25, 15, 1, 14, 8, 27, 31, 2, 12, 23, 3, 19, 21, 17, 26, 28, 5, 7, 22, 20, 30, 5, 4, 6, 16, 18, 7, 27, 8, 9, 4, 5, 28, 16, 15, 25, 26, 17, 18, 19, 20, 22, 21, 24, 23, 26, 25, 27, 28, 30, 29, 31, 1, 3, 1, 7, 3, 7, 2, 6, 6, 8, 2, 8, 4, 9, 4, 7, 7, 9, 3, 10, 1, 10, 12, 13, 6, 12, 6, 13, 11, 12, 11, 13, 2, 12, 5, 12, 5, 11, 0, 13, 0, 9, 9, 13, 0, 6, 0, 1, 0, 8, 1, 8, 0, 7, 0, 4, 2, 14, 8, 14, 12, 14, 5, 14, 5, 10, 10, 14, 3, 15, 10, 15, 11, 15, 3, 11, 5, 15, 1, 16, 10, 16, 8, 16, 14, 16, 13, 17, 9, 17, 11, 17, 3, 17, 7, 17, 1, 3, 7, 2, 6, 8, 4, 7, 9, 1, 3, 10, 6, 12, 13, 11, 12, 13, 2, 6, 12, 5, 11, 12, 0, 9, 13, 0, 6, 13, 0, 1, 8, 0, 1, 7, 0, 4, 9, 0, 4, 7, 0, 6, 8, 2, 8, 14, 2, 12, 14, 5, 10, 14, 5, 12, 14, 3, 10, 15, 3, 11, 15, 5, 10, 15, 5, 11, 15, 1, 10, 16, 1, 8, 16, 8, 14, 16, 10, 14, 16, 9, 13, 17, 11, 13, 17, 3, 7, 17, 3, 11, 17, 7, 9, 17, 0, 0, 3, 0, 11, 0, 0, 0, 0, 0, 29, 0, 6, 0, 1, 0, 14, 0, 1, 0, 1, 0, 15, 0, 12, 0, 2, 0, 2, 0, 13, 0, 2, 0, 31, 0, 19, 0, 3, 0, 3, 0, 23, 0, 5, 0, 4, 0, 6, 0, 4, 0, 4, 0, 9, 0, 5, 0, 7, 0, 28, 0, 5, 0, 16, 0, 6, 0, 7, 0, 18, 0, 22, 0, 7, 0, 9, 0, 8, 0, 8, 0, 12, 0, 8, 0, 27, 0, 14, 0, 9, 0, 11, 0, 10, 0, 10, 0, 14, 0, 24, 0, 10, 0, 13, 0, 11, 0, 12, 0, 13, 0, 15, 0, 16, 0, 25, 0, 15, 0, 16, 0, 18, 0, 18, 0, 17, 0, 17, 0, 21, 0, 17, 0, 26, 0, 20, 0, 19, 0, 19, 0, 21, 0, 22, 0, 20, 0, 30, 0, 20, 0, 21, 0, 22, 0, 23, 0, 24, 0, 26, 0, 23, 0, 24, 0, 25, 0, 25, 0, 26, 0, 28, 0, 27, 0, 27, 0, 31, 0, 30, 0, 28, 0, 29, 0, 30, 0, 31, 0, 29, 0, 0, 0, 0, 0, 38, 15, 96, 189, 26, 166, 6, 190, 0, 0, 0, 0, 198, 181, 96, 61, 134, 109, 142, 61, 221, 31, 131, 62, 44, 244, 76, 59, 249, 43, 145, 56, 153, 196, 168, 179, 211, 247, 55, 51, 153, 196, 168, 179, 78, 129, 133, 56, 78, 46, 130, 55, 211, 247, 55, 51, 78, 46, 130, 55, 178, 40, 52, 55, 38, 64, 157, 56, 19, 101, 254, 188, 98, 156, 251, 61, 0, 0, 128, 191, 0, 0, 128, 191, 6, 238, 95, 61, 50, 73, 1, 61, 50, 73, 1, 61, 209, 61, 156, 61]
                matrix4d xformOp:transform = ( (0.9999999455413471, 0, 0, 0), (0, 0.9999999455413471, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, -0.19200000333785994, 1) )
            }
        }
    }

    def Xform "panda_link2" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.0000019038872, 9.1429115e-7, 0.0000014697537)
        bool physics:kinematicEnabled = 0
        float physics:mass = 2.3795187
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (-0.7071062, 0.70710737, 2.339618e-24, -2.6077032e-8)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (3.5250558e-8, -1.04904174e-7, 0.33299989)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint3" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 5220
            float drive:angular:physics:stiffness = 1047.1975
            float drive:angular:physics:targetPosition = 0
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link2>
            rel physics:body1 = </panda/panda_link3>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0, -0.31599998, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.49999994, 0.49999994, -0.49999994, -0.49999994)
            quatf physics:localRot1 = (0.70710665, 0, -0.70710665, 0)
            custom float physics:lowerLimit = -166.00307
            custom float physics:upperLimit = 166.00307
            custom float physxJoint:maxJointVelocity = 572.9578
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link2.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 3.0185458e-7, 3.0185456e-7)
            float3 xformOp:scale = (1, 1.0000001, 1.0000001)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID3_000" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 146, 70, 133, 73, 0, 112, 223, 129, 184, 75, 115, 40, 181, 31, 124, 109, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 49, 128, 0, 0, 19, 0, 0, 0, 98, 0, 0, 0, 0, 2, 118, 59, 192, 19, 77, 189, 224, 237, 237, 61, 0, 0, 160, 52, 241, 167, 70, 190, 192, 91, 97, 189, 47, 68, 97, 189, 80, 98, 182, 188, 123, 57, 215, 61, 7, 61, 97, 189, 142, 147, 53, 60, 83, 113, 206, 61, 168, 243, 253, 187, 160, 225, 167, 187, 155, 231, 5, 62, 147, 141, 96, 61, 152, 12, 164, 188, 232, 101, 211, 61, 222, 150, 96, 61, 104, 183, 154, 60, 254, 138, 199, 61, 145, 244, 6, 61, 213, 203, 57, 61, 254, 123, 224, 61, 224, 161, 127, 59, 141, 217, 27, 61, 82, 65, 7, 62, 104, 159, 88, 60, 64, 142, 90, 187, 78, 134, 6, 62, 96, 84, 141, 59, 208, 172, 44, 60, 85, 33, 11, 62, 69, 197, 96, 189, 245, 204, 75, 60, 64, 189, 38, 58, 77, 166, 96, 189, 130, 234, 2, 190, 156, 215, 4, 189, 132, 253, 240, 60, 155, 198, 60, 61, 0, 104, 25, 187, 0, 32, 13, 54, 114, 169, 181, 189, 68, 29, 61, 189, 92, 154, 233, 185, 102, 230, 255, 189, 16, 85, 95, 189, 15, 246, 96, 189, 58, 62, 74, 190, 144, 255, 251, 60, 99, 170, 96, 189, 9, 20, 78, 190, 102, 51, 6, 189, 225, 219, 96, 61, 240, 167, 70, 190, 76, 5, 236, 60, 64, 139, 31, 61, 135, 199, 75, 190, 216, 33, 34, 189, 104, 143, 84, 59, 242, 167, 70, 190, 56, 227, 96, 61, 2, 89, 139, 60, 115, 107, 128, 61, 124, 65, 102, 61, 128, 160, 250, 188, 24, 20, 56, 61, 168, 0, 227, 61, 176, 115, 132, 60, 51, 38, 126, 61, 128, 113, 57, 59, 7, 2, 233, 188, 1, 127, 56, 61, 72, 12, 52, 187, 238, 17, 7, 189, 124, 85, 52, 61, 93, 93, 224, 61, 232, 95, 14, 189, 121, 181, 46, 61, 16, 158, 46, 186, 193, 3, 97, 61, 8, 230, 72, 190, 192, 9, 153, 187, 250, 255, 96, 61, 7, 73, 131, 60, 48, 190, 24, 60, 164, 168, 39, 61, 210, 168, 75, 190, 198, 230, 30, 189, 37, 83, 31, 61, 208, 150, 0, 190, 229, 74, 31, 189, 224, 159, 81, 61, 232, 180, 165, 60, 80, 18, 3, 58, 1, 30, 68, 63, 94, 118, 36, 63, 239, 179, 163, 188, 190, 198, 85, 189, 0, 0, 7, 17, 245, 255, 127, 63, 224, 234, 115, 184, 56, 92, 149, 58, 25, 10, 97, 189, 7, 0, 5, 11, 51, 169, 155, 57, 124, 120, 115, 191, 55, 55, 158, 190, 209, 87, 78, 190, 12, 0, 3, 7, 224, 151, 155, 185, 124, 120, 115, 63, 55, 55, 158, 62, 78, 179, 157, 189, 15, 0, 4, 17, 182, 104, 144, 58, 54, 55, 158, 62, 112, 120, 115, 191, 0, 44, 135, 188, 19, 0, 4, 4, 42, 103, 144, 186, 55, 55, 158, 190, 112, 120, 115, 63, 26, 251, 0, 190, 23, 0, 4, 24, 241, 175, 215, 62, 60, 135, 182, 190, 160, 124, 85, 63, 246, 53, 238, 189, 27, 0, 5, 26, 87, 208, 172, 190, 153, 65, 188, 190, 44, 213, 93, 63, 254, 71, 241, 189, 32, 0, 5, 13, 17, 190, 192, 190, 226, 211, 137, 59, 87, 42, 109, 191, 119, 111, 77, 189, 37, 0, 4, 10, 56, 35, 189, 62, 81, 38, 20, 60, 139, 225, 109, 191, 46, 57, 74, 189, 41, 0, 5, 10, 245, 255, 127, 191, 205, 234, 115, 56, 56, 92, 149, 186, 57, 197, 96, 189, 46, 0, 6, 28, 224, 13, 85, 191, 87, 235, 13, 63, 30, 231, 214, 59, 125, 83, 87, 189, 52, 0, 4, 27, 92, 81, 1, 191, 195, 162, 225, 61, 246, 32, 91, 63, 90, 25, 236, 189, 56, 0, 7, 29, 161, 181, 22, 63, 197, 83, 243, 61, 89, 176, 76, 63, 139, 64, 230, 189, 63, 0, 6, 17, 194, 53, 193, 190, 143, 125, 89, 62, 218, 192, 102, 191, 34, 150, 186, 188, 69, 0, 6, 9, 228, 250, 189, 62, 133, 11, 90, 62, 227, 99, 103, 191, 146, 37, 187, 188, 75, 0, 5, 4, 87, 13, 7, 61, 137, 80, 127, 191, 158, 172, 133, 61, 62, 231, 73, 190, 80, 0, 7, 23, 74, 8, 182, 190, 239, 68, 111, 63, 23, 26, 193, 187, 250, 236, 85, 189, 87, 0, 6, 27, 191, 148, 108, 63, 191, 11, 206, 60, 124, 46, 195, 190, 205, 6, 67, 189, 93, 0, 5, 2, 6, 28, 31, 13, 23, 21, 7, 5, 18, 27, 28, 6, 17, 1, 19, 7, 21, 22, 8, 23, 13, 14, 24, 0, 9, 10, 4, 18, 5, 9, 0, 20, 2, 16, 20, 0, 4, 17, 12, 15, 1, 29, 19, 1, 15, 30, 16, 2, 3, 11, 12, 17, 11, 3, 25, 26, 3, 2, 4, 10, 8, 22, 25, 5, 6, 7, 8, 10, 9, 12, 11, 26, 24, 14, 15, 30, 15, 14, 13, 31, 16, 17, 19, 29, 27, 18, 20, 22, 21, 23, 24, 26, 25, 28, 27, 29, 30, 31, 5, 7, 5, 6, 6, 7, 8, 9, 2, 8, 2, 9, 10, 12, 7, 12, 7, 10, 10, 11, 11, 12, 5, 12, 1, 13, 6, 13, 1, 6, 0, 13, 0, 1, 3, 13, 0, 3, 12, 13, 3, 12, 5, 13, 10, 14, 11, 14, 8, 14, 8, 10, 4, 15, 0, 4, 0, 15, 14, 15, 4, 14, 9, 15, 10, 16, 7, 16, 2, 16, 6, 16, 1, 16, 9, 16, 3, 17, 0, 17, 12, 17, 4, 17, 14, 17, 11, 17, 1, 18, 16, 18, 0, 18, 9, 18, 15, 18, 5, 6, 7, 2, 8, 9, 7, 10, 12, 10, 11, 12, 5, 7, 12, 1, 6, 13, 0, 1, 13, 0, 3, 13, 3, 12, 13, 5, 6, 13, 5, 12, 13, 10, 11, 14, 8, 10, 14, 0, 4, 15, 4, 14, 15, 8, 9, 14, 7, 10, 16, 2, 8, 10, 1, 6, 16, 2, 9, 16, 6, 7, 16, 0, 3, 17, 3, 12, 17, 0, 4, 17, 4, 14, 17, 11, 12, 17, 11, 14, 17, 1, 16, 18, 0, 1, 18, 9, 16, 18, 9, 15, 18, 0, 15, 18, 4, 0, 0, 0, 0, 0, 9, 0, 0, 0, 20, 0, 15, 0, 1, 0, 17, 0, 1, 0, 1, 0, 19, 0, 2, 0, 3, 0, 4, 0, 2, 0, 2, 0, 16, 0, 3, 0, 11, 0, 3, 0, 25, 0, 10, 0, 4, 0, 6, 0, 5, 0, 5, 0, 9, 0, 5, 0, 18, 0, 7, 0, 6, 0, 6, 0, 28, 0, 8, 0, 7, 0, 21, 0, 7, 0, 10, 0, 8, 0, 22, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 26, 0, 11, 0, 12, 0, 15, 0, 17, 0, 12, 0, 13, 0, 14, 0, 13, 0, 23, 0, 31, 0, 13, 0, 14, 0, 15, 0, 14, 0, 24, 0, 15, 0, 30, 0, 17, 0, 16, 0, 16, 0, 20, 0, 19, 0, 17, 0, 20, 0, 18, 0, 18, 0, 27, 0, 29, 0, 19, 0, 21, 0, 22, 0, 23, 0, 21, 0, 22, 0, 25, 0, 24, 0, 23, 0, 26, 0, 24, 0, 25, 0, 26, 0, 27, 0, 28, 0, 29, 0, 27, 0, 28, 0, 31, 0, 30, 0, 29, 0, 31, 0, 30, 0, 0, 0, 0, 0, 47, 68, 97, 189, 9, 20, 78, 190, 192, 91, 97, 189, 193, 3, 97, 61, 114, 107, 128, 61, 85, 33, 11, 62, 132, 148, 74, 59, 41, 226, 28, 56, 209, 83, 157, 180, 230, 31, 60, 179, 209, 83, 157, 180, 177, 0, 53, 55, 201, 203, 82, 54, 230, 31, 60, 179, 201, 203, 82, 54, 90, 151, 5, 56, 140, 254, 1, 186, 229, 20, 143, 189, 68, 127, 4, 61, 0, 0, 128, 191, 0, 0, 128, 191, 40, 232, 94, 61, 2, 178, 0, 61, 163, 199, 144, 61, 2, 178, 0, 61]
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }
        }
    }

    def Xform "panda_link3" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.0000012930018, 0.0000015024211, 0.000001427346)
        bool physics:kinematicEnabled = 0
        float physics:mass = 2.6498823
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-5.7220458e-8, -2.6226044e-8, 0.649)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint4" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 5220
            float drive:angular:physics:stiffness = 1047.1975
            float drive:angular:physics:targetPosition = -161.00114
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link3>
            rel physics:body1 = </panda/panda_link4>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0.08249996, 0, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.4999999, 0.4999999, -0.4999999, -0.4999999)
            quatf physics:localRot1 = (0.70710665, 0, -0.70710665, 0)
            custom float physics:lowerLimit = -176.00117
            custom float physics:upperLimit = -3.9992452
            custom float physxJoint:maxJointVelocity = 572.9578
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link3.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID17_001" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 202, 225, 188, 2, 222, 158, 87, 209, 14, 218, 91, 84, 90, 205, 14, 51, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 31, 0, 0, 0, 47, 128, 0, 0, 18, 0, 0, 0, 94, 0, 0, 0, 87, 97, 238, 188, 137, 94, 76, 61, 240, 83, 35, 184, 144, 38, 41, 61, 75, 153, 119, 61, 49, 216, 34, 184, 91, 194, 106, 61, 0, 229, 52, 187, 160, 98, 35, 184, 126, 139, 48, 61, 2, 21, 44, 189, 220, 217, 35, 184, 190, 192, 189, 61, 120, 79, 189, 188, 225, 95, 18, 61, 60, 42, 11, 62, 176, 229, 144, 59, 174, 245, 44, 62, 82, 122, 13, 62, 52, 225, 165, 59, 3, 137, 44, 62, 110, 15, 65, 61, 75, 82, 211, 61, 54, 205, 199, 61, 62, 146, 144, 61, 193, 243, 209, 61, 80, 88, 40, 62, 112, 252, 109, 61, 42, 152, 206, 61, 13, 36, 30, 62, 119, 116, 200, 61, 46, 131, 221, 61, 2, 133, 35, 62, 126, 1, 37, 189, 36, 51, 25, 189, 2, 65, 36, 184, 104, 58, 124, 188, 120, 196, 116, 189, 123, 87, 36, 184, 0, 226, 158, 58, 34, 208, 49, 189, 186, 240, 213, 61, 16, 7, 142, 61, 112, 123, 147, 186, 217, 137, 55, 62, 98, 156, 103, 61, 192, 97, 142, 60, 28, 189, 54, 62, 248, 154, 255, 188, 8, 202, 254, 188, 170, 103, 174, 61, 62, 122, 46, 188, 110, 196, 69, 189, 14, 215, 189, 61, 2, 255, 20, 62, 248, 100, 199, 59, 37, 35, 33, 62, 190, 42, 5, 62, 48, 155, 210, 187, 191, 56, 174, 61, 24, 29, 26, 189, 48, 143, 149, 60, 173, 95, 203, 61, 16, 135, 29, 189, 240, 237, 56, 60, 236, 69, 206, 61, 122, 194, 100, 189, 64, 101, 59, 187, 187, 254, 35, 184, 244, 73, 106, 189, 92, 240, 163, 188, 160, 139, 83, 60, 168, 45, 76, 189, 76, 61, 239, 60, 15, 165, 35, 184, 193, 143, 72, 189, 100, 77, 148, 188, 236, 187, 138, 61, 246, 204, 164, 61, 211, 17, 224, 61, 0, 169, 205, 61, 188, 0, 189, 61, 13, 182, 202, 61, 253, 102, 147, 61, 221, 33, 2, 62, 206, 1, 195, 61, 18, 97, 1, 62, 243, 101, 211, 61, 57, 5, 225, 61, 64, 150, 26, 62, 118, 12, 251, 61, 24, 188, 190, 61, 61, 89, 217, 61, 50, 215, 147, 62, 69, 172, 115, 191, 183, 242, 210, 61, 199, 193, 86, 189, 0, 0, 9, 7, 160, 197, 11, 62, 32, 18, 105, 191, 13, 238, 199, 62, 200, 210, 164, 189, 9, 0, 3, 1, 214, 30, 32, 63, 197, 231, 103, 190, 248, 36, 63, 191, 186, 131, 21, 189, 12, 0, 3, 20, 214, 30, 32, 191, 201, 231, 103, 62, 247, 36, 63, 63, 215, 131, 208, 189, 15, 0, 5, 4, 196, 169, 68, 63, 57, 59, 177, 62, 140, 221, 9, 63, 122, 101, 75, 190, 20, 0, 5, 11, 197, 169, 68, 191, 55, 59, 177, 190, 139, 221, 9, 191, 146, 224, 51, 189, 25, 0, 3, 10, 226, 24, 64, 63, 165, 183, 66, 62, 150, 16, 34, 191, 21, 28, 46, 189, 28, 0, 6, 21, 24, 91, 50, 191, 156, 219, 50, 63, 180, 157, 38, 62, 168, 204, 97, 189, 34, 0, 5, 19, 101, 224, 69, 191, 136, 123, 169, 190, 54, 144, 10, 63, 127, 224, 164, 189, 39, 0, 3, 30, 31, 39, 172, 53, 187, 177, 30, 54, 0, 0, 128, 191, 141, 170, 35, 184, 42, 0, 8, 14, 163, 197, 11, 190, 32, 18, 105, 63, 10, 238, 199, 190, 81, 101, 74, 189, 50, 0, 5, 13, 97, 252, 15, 62, 23, 252, 13, 62, 111, 245, 122, 63, 235, 191, 61, 190, 55, 0, 6, 11, 202, 226, 65, 190, 67, 156, 122, 63, 228, 36, 156, 61, 33, 212, 203, 189, 61, 0, 6, 12, 47, 183, 41, 191, 198, 244, 60, 191, 67, 67, 0, 62, 239, 114, 94, 189, 67, 0, 6, 28, 77, 44, 19, 191, 149, 217, 187, 190, 72, 58, 59, 63, 192, 168, 187, 189, 73, 0, 6, 1, 194, 94, 119, 63, 115, 229, 246, 61, 179, 242, 104, 190, 174, 34, 216, 189, 79, 0, 4, 25, 144, 40, 121, 191, 11, 138, 58, 62, 211, 45, 15, 62, 121, 125, 92, 189, 83, 0, 6, 18, 38, 81, 192, 62, 107, 221, 104, 63, 183, 179, 53, 190, 183, 58, 229, 189, 89, 0, 5, 17, 5, 13, 17, 12, 3, 4, 19, 18, 6, 13, 5, 14, 3, 2, 4, 15, 8, 9, 20, 21, 10, 6, 18, 28, 29, 22, 11, 23, 1, 27, 30, 19, 4, 2, 7, 0, 24, 20, 9, 25, 16, 21, 0, 1, 2, 3, 12, 11, 22, 24, 0, 7, 26, 27, 1, 14, 5, 6, 10, 8, 15, 26, 7, 9, 8, 10, 29, 16, 25, 23, 11, 12, 17, 13, 14, 15, 21, 16, 17, 28, 18, 19, 30, 21, 20, 24, 22, 23, 25, 27, 26, 29, 28, 30, 9, 10, 7, 10, 7, 9, 6, 9, 6, 10, 2, 9, 2, 6, 0, 2, 0, 9, 0, 6, 0, 11, 0, 1, 1, 11, 4, 11, 0, 4, 7, 12, 10, 12, 3, 12, 11, 12, 3, 11, 3, 7, 4, 12, 9, 13, 5, 9, 5, 13, 0, 13, 1, 14, 0, 14, 11, 14, 3, 14, 13, 14, 8, 14, 8, 13, 0, 15, 4, 15, 6, 15, 3, 16, 7, 16, 8, 16, 5, 16, 9, 16, 13, 16, 10, 17, 12, 17, 6, 17, 4, 17, 15, 17, 7, 9, 10, 6, 9, 10, 2, 6, 9, 0, 2, 9, 0, 2, 6, 0, 1, 11, 0, 4, 11, 7, 10, 12, 3, 11, 12, 3, 7, 12, 4, 11, 12, 5, 9, 13, 0, 9, 13, 0, 1, 14, 1, 11, 14, 3, 11, 14, 8, 13, 14, 0, 13, 14, 0, 4, 15, 0, 6, 15, 3, 7, 16, 3, 8, 14, 5, 9, 16, 5, 13, 16, 7, 9, 16, 8, 13, 16, 10, 12, 17, 6, 10, 17, 4, 15, 17, 4, 12, 17, 6, 15, 17, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0, 24, 0, 2, 0, 1, 0, 1, 0, 27, 0, 3, 0, 2, 0, 2, 0, 4, 0, 3, 0, 4, 0, 12, 0, 3, 0, 4, 0, 19, 0, 6, 0, 5, 0, 5, 0, 13, 0, 5, 0, 14, 0, 10, 0, 6, 0, 18, 0, 6, 0, 9, 0, 7, 0, 7, 0, 26, 0, 8, 0, 9, 0, 10, 0, 8, 0, 15, 0, 8, 0, 9, 0, 20, 0, 29, 0, 10, 0, 12, 0, 11, 0, 22, 0, 11, 0, 11, 0, 23, 0, 17, 0, 12, 0, 14, 0, 13, 0, 13, 0, 17, 0, 15, 0, 14, 0, 21, 0, 15, 0, 17, 0, 16, 0, 16, 0, 21, 0, 25, 0, 16, 0, 19, 0, 18, 0, 18, 0, 28, 0, 30, 0, 19, 0, 20, 0, 21, 0, 24, 0, 20, 0, 21, 0, 25, 0, 23, 0, 22, 0, 22, 0, 24, 0, 25, 0, 23, 0, 26, 0, 27, 0, 29, 0, 26, 0, 27, 0, 30, 0, 28, 0, 29, 0, 30, 0, 28, 0, 0, 0, 0, 0, 244, 73, 106, 189, 119, 196, 116, 189, 0, 80, 36, 184, 2, 255, 20, 62, 56, 5, 225, 61, 217, 137, 55, 62, 109, 150, 25, 59, 124, 219, 210, 55, 176, 171, 129, 182, 239, 74, 59, 183, 176, 171, 129, 182, 32, 75, 251, 55, 233, 33, 198, 182, 239, 74, 59, 183, 233, 33, 198, 182, 34, 153, 97, 55, 178, 14, 55, 61, 147, 192, 197, 60, 24, 44, 170, 61, 0, 0, 128, 191, 0, 0, 128, 191, 44, 245, 92, 61, 224, 202, 42, 61, 214, 35, 255, 60, 214, 35, 255, 60]
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, -0.12100000111013642, 1) )
            }

            over "ID17_001frA" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, -0.12100000111013642, 1) )
            }
        }
    }

    def Xform "panda_link4" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.0000013387461, 0.0000014514325, 0.0000015517554)
        bool physics:kinematicEnabled = 0
        float physics:mass = 2.6948018
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (0.70710605, 0.7071075, 5.9604645e-8, 2.9802322e-8)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.08250017, 9.298324e-8, 0.64899975)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint5" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 720
            float drive:angular:physics:stiffness = 436.3323
            float drive:angular:physics:targetPosition = 0
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link4>
            rel physics:body1 = </panda/panda_link5>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (-0.08249994, 0.38399988, -1.4210855e-14)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.4999999, -0.4999999, -0.4999999, 0.4999999)
            quatf physics:localRot1 = (0.70710665, 0, -0.70710665, 0)
            custom float physics:lowerLimit = -166.00307
            custom float physics:upperLimit = 166.00307
            custom float physxJoint:maxJointVelocity = 572.9578
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link4.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 6.0370934e-7, 0)
            float3 xformOp:scale = (1, 0.99999994, 0.99999994)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID25_000" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.0002616647034615196, 0, -0.9999997908715464, 0), (0, 0.9999999098983972, 0, 0), (0.9999998586213988, 0, 0.00026166472118926835, 0), (0, 0, 0, 1) )
            }

            over "ID25_000frA" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 57, 250, 17, 29, 187, 33, 43, 233, 243, 34, 32, 51, 250, 9, 116, 151, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 49, 128, 0, 0, 19, 0, 0, 0, 98, 0, 0, 0, 182, 229, 66, 61, 171, 14, 254, 61, 40, 173, 65, 189, 5, 19, 34, 189, 178, 14, 254, 61, 224, 226, 20, 189, 204, 29, 171, 60, 175, 14, 254, 61, 166, 180, 166, 188, 0, 212, 131, 60, 162, 14, 254, 61, 59, 223, 8, 190, 12, 135, 119, 189, 177, 14, 254, 61, 80, 163, 151, 189, 16, 79, 91, 59, 32, 36, 137, 59, 180, 88, 95, 61, 64, 106, 80, 187, 170, 184, 10, 61, 61, 83, 64, 61, 224, 179, 63, 189, 0, 41, 159, 59, 128, 85, 188, 189, 212, 83, 155, 188, 166, 14, 254, 61, 142, 32, 19, 190, 180, 21, 71, 189, 172, 14, 254, 61, 160, 130, 226, 189, 39, 130, 185, 187, 49, 13, 25, 189, 86, 87, 128, 61, 144, 106, 202, 59, 28, 180, 103, 189, 128, 130, 19, 187, 92, 63, 139, 186, 255, 141, 112, 189, 228, 24, 62, 188, 53, 134, 211, 189, 112, 165, 30, 61, 32, 175, 139, 187, 92, 146, 200, 189, 240, 131, 204, 60, 0, 206, 238, 60, 210, 36, 201, 189, 184, 183, 87, 60, 120, 148, 30, 61, 128, 140, 152, 57, 16, 213, 70, 189, 224, 251, 218, 188, 120, 176, 13, 189, 16, 160, 85, 60, 22, 36, 219, 189, 134, 93, 106, 188, 172, 108, 35, 61, 107, 132, 9, 190, 80, 59, 7, 61, 143, 89, 248, 61, 218, 165, 3, 190, 172, 134, 20, 61, 162, 14, 254, 61, 227, 238, 253, 189, 88, 167, 53, 61, 28, 241, 27, 61, 96, 196, 197, 189, 188, 208, 238, 60, 238, 234, 17, 61, 181, 89, 245, 189, 78, 70, 108, 61, 164, 14, 254, 61, 179, 162, 185, 189, 232, 218, 228, 60, 42, 137, 24, 61, 44, 204, 249, 189, 87, 81, 210, 189, 76, 4, 66, 188, 219, 42, 51, 61, 202, 44, 188, 189, 153, 27, 67, 189, 248, 52, 39, 60, 156, 13, 220, 189, 125, 248, 134, 188, 40, 177, 168, 188, 245, 29, 204, 189, 27, 177, 18, 189, 232, 113, 157, 188, 3, 31, 188, 189, 173, 158, 78, 189, 0, 216, 202, 183, 24, 77, 225, 189, 184, 84, 28, 188, 28, 28, 155, 188, 226, 2, 230, 189, 0, 136, 182, 56, 246, 174, 155, 187, 17, 14, 93, 53, 0, 0, 128, 63, 239, 31, 123, 181, 181, 14, 254, 189, 0, 0, 9, 12, 156, 126, 158, 62, 31, 194, 50, 63, 49, 59, 37, 191, 210, 36, 54, 190, 9, 0, 3, 25, 91, 226, 43, 63, 11, 35, 36, 191, 188, 69, 190, 190, 56, 249, 40, 189, 12, 0, 5, 14, 91, 226, 43, 191, 12, 35, 36, 63, 192, 69, 190, 62, 248, 162, 189, 189, 17, 0, 4, 22, 237, 94, 44, 191, 175, 250, 162, 190, 32, 213, 42, 191, 237, 12, 187, 189, 21, 0, 3, 0, 236, 94, 44, 63, 175, 250, 162, 62, 31, 213, 42, 63, 113, 186, 35, 189, 24, 0, 4, 27, 236, 237, 117, 63, 183, 92, 40, 190, 170, 49, 101, 62, 38, 91, 113, 188, 28, 0, 6, 31, 155, 126, 158, 190, 31, 194, 50, 191, 49, 59, 37, 63, 102, 220, 139, 189, 34, 0, 3, 20, 195, 109, 21, 190, 248, 132, 80, 191, 118, 188, 15, 191, 213, 65, 95, 189, 37, 0, 6, 2, 77, 151, 77, 190, 115, 169, 30, 63, 214, 55, 66, 63, 84, 128, 106, 189, 43, 0, 5, 24, 82, 15, 140, 62, 93, 174, 187, 189, 122, 29, 117, 191, 148, 214, 247, 189, 48, 0, 5, 25, 183, 146, 109, 191, 136, 219, 97, 62, 24, 182, 153, 190, 95, 106, 216, 189, 53, 0, 5, 10, 167, 115, 6, 190, 113, 30, 95, 62, 238, 147, 119, 63, 32, 239, 89, 189, 58, 0, 5, 18, 57, 98, 61, 191, 174, 63, 235, 189, 126, 184, 41, 191, 86, 160, 194, 189, 63, 0, 7, 5, 132, 198, 93, 189, 237, 127, 118, 191, 167, 96, 135, 62, 26, 76, 91, 189, 70, 0, 5, 8, 11, 27, 114, 191, 166, 22, 95, 62, 93, 233, 118, 62, 85, 56, 215, 189, 75, 0, 5, 21, 77, 136, 14, 62, 248, 107, 65, 191, 113, 223, 35, 191, 185, 123, 92, 189, 80, 0, 5, 2, 192, 116, 86, 63, 237, 40, 190, 189, 54, 196, 9, 191, 172, 70, 175, 189, 85, 0, 6, 25, 35, 246, 108, 191, 182, 35, 187, 190, 210, 202, 200, 61, 231, 226, 211, 189, 91, 0, 7, 23, 20, 3, 8, 9, 4, 1, 2, 0, 23, 19, 3, 20, 21, 11, 12, 16, 22, 1, 4, 13, 14, 27, 7, 28, 5, 0, 2, 6, 11, 21, 23, 0, 5, 10, 10, 25, 26, 28, 7, 17, 16, 12, 29, 6, 2, 1, 14, 15, 3, 19, 24, 18, 8, 13, 4, 9, 30, 31, 25, 10, 5, 6, 15, 7, 27, 30, 9, 8, 18, 17, 10, 26, 29, 12, 11, 25, 15, 14, 13, 31, 22, 16, 17, 18, 24, 19, 20, 23, 21, 22, 24, 26, 25, 31, 30, 27, 28, 29, 0, 5, 5, 6, 0, 6, 0, 9, 0, 3, 3, 9, 5, 9, 0, 10, 1, 10, 0, 1, 0, 11, 3, 11, 5, 12, 6, 12, 9, 12, 8, 13, 4, 13, 4, 8, 0, 13, 10, 13, 11, 13, 6, 14, 7, 12, 7, 14, 2, 14, 2, 6, 2, 8, 8, 14, 3, 15, 11, 15, 9, 15, 12, 15, 8, 16, 2, 16, 13, 16, 10, 16, 1, 17, 10, 17, 0, 17, 2, 17, 6, 17, 16, 17, 7, 18, 15, 18, 14, 18, 4, 18, 13, 18, 8, 18, 11, 18, 0, 5, 6, 0, 3, 9, 0, 5, 9, 0, 1, 10, 0, 3, 11, 5, 6, 12, 5, 9, 12, 4, 8, 13, 0, 10, 13, 0, 11, 13, 6, 7, 12, 2, 6, 14, 2, 8, 14, 3, 11, 15, 3, 9, 15, 9, 12, 15, 2, 8, 16, 8, 13, 16, 10, 13, 16, 1, 10, 17, 0, 1, 17, 2, 6, 17, 2, 16, 17, 0, 6, 17, 10, 16, 17, 7, 12, 15, 7, 14, 18, 4, 13, 18, 4, 8, 18, 8, 14, 18, 11, 13, 18, 11, 15, 18, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 23, 0, 1, 0, 2, 0, 4, 0, 1, 0, 14, 0, 1, 0, 2, 0, 6, 0, 3, 0, 8, 0, 19, 0, 3, 0, 20, 0, 3, 0, 9, 0, 4, 0, 4, 0, 13, 0, 6, 0, 5, 0, 5, 0, 10, 0, 15, 0, 6, 0, 7, 0, 17, 0, 27, 0, 7, 0, 7, 0, 28, 0, 8, 0, 9, 0, 18, 0, 8, 0, 9, 0, 30, 0, 10, 0, 11, 0, 10, 0, 25, 0, 26, 0, 10, 0, 11, 0, 12, 0, 21, 0, 11, 0, 12, 0, 16, 0, 12, 0, 29, 0, 13, 0, 14, 0, 31, 0, 13, 0, 14, 0, 15, 0, 15, 0, 25, 0, 17, 0, 16, 0, 16, 0, 22, 0, 18, 0, 17, 0, 24, 0, 18, 0, 20, 0, 19, 0, 19, 0, 24, 0, 23, 0, 20, 0, 22, 0, 21, 0, 21, 0, 23, 0, 24, 0, 22, 0, 25, 0, 26, 0, 31, 0, 25, 0, 26, 0, 29, 0, 28, 0, 27, 0, 27, 0, 30, 0, 29, 0, 28, 0, 30, 0, 31, 0, 0, 0, 0, 0, 226, 2, 230, 189, 0, 142, 112, 189, 142, 32, 19, 190, 77, 70, 108, 61, 178, 14, 254, 61, 86, 87, 128, 61, 57, 181, 23, 59, 184, 89, 137, 55, 159, 141, 130, 53, 214, 18, 106, 181, 159, 141, 130, 53, 111, 88, 75, 55, 202, 48, 206, 54, 214, 18, 106, 181, 202, 48, 206, 54, 15, 84, 82, 55, 236, 114, 197, 188, 233, 41, 36, 61, 140, 112, 30, 189, 0, 0, 128, 191, 0, 0, 128, 191, 32, 162, 89, 61, 34, 77, 251, 60, 34, 77, 251, 60, 208, 102, 43, 61]
                matrix4d xformOp:transform = ( (3.422853633532329e-8, 0, -0.9999998052904401, 0), (0, 0.9999998743882951, 0, 0), (0.9999999085503961, 0, 3.4228539869761134e-8, 0), (0, 0, 0, 1) )
            }
        }
    }

    def Xform "panda_link5" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (0.000003255657, 0.0000027066046, 0.0000011502337)
        float physics:mass = 2.9812818
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:maxDepenetrationVelocity = 0.049999997
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 5e-7
        float physxRigidBody:stabilizationThreshold = 1e-9
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (1.0281801e-8, -2.002716e-7, 1.0330006)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint6" (
            prepend apiSchemas = ["PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 720
            float drive:angular:physics:stiffness = 261.79938
            float drive:angular:physics:targetPosition = 174.00728
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link5>
            rel physics:body1 = </panda/panda_link6>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0, 0, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.49999988, 0.49999988, -0.49999988, -0.49999988)
            quatf physics:localRot1 = (0.70710665, 0, -0.70710665, 0)
            custom float physics:lowerLimit = -1.0026761
            custom float physics:upperLimit = 215.00241
            custom float physxJoint:maxJointVelocity = 572.9578
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link5.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID11_000" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 223, 173, 166, 164, 29, 169, 13, 61, 101, 132, 47, 209, 15, 74, 127, 147, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 49, 128, 0, 0, 19, 0, 0, 0, 98, 0, 0, 0, 198, 207, 68, 189, 186, 255, 159, 60, 183, 240, 142, 188, 102, 115, 70, 61, 14, 141, 61, 189, 128, 58, 125, 186, 128, 149, 254, 186, 180, 98, 133, 189, 66, 37, 118, 59, 102, 179, 36, 189, 134, 31, 160, 61, 106, 31, 182, 61, 214, 54, 97, 61, 0, 56, 8, 59, 158, 66, 86, 188, 153, 77, 97, 61, 24, 195, 172, 188, 160, 96, 238, 187, 206, 76, 61, 189, 192, 230, 89, 60, 54, 177, 138, 62, 244, 194, 43, 189, 12, 98, 240, 61, 63, 7, 140, 62, 221, 113, 19, 61, 86, 197, 4, 61, 223, 95, 169, 188, 24, 34, 21, 188, 124, 221, 44, 61, 150, 117, 189, 188, 225, 195, 192, 60, 74, 97, 173, 61, 176, 223, 160, 61, 8, 54, 243, 187, 160, 238, 190, 61, 212, 19, 165, 61, 136, 233, 33, 188, 41, 94, 185, 61, 89, 96, 151, 61, 238, 251, 64, 61, 64, 110, 129, 60, 68, 138, 137, 62, 60, 213, 61, 61, 52, 69, 215, 61, 60, 212, 138, 62, 178, 223, 241, 60, 230, 218, 245, 61, 27, 157, 153, 62, 13, 211, 251, 60, 246, 7, 2, 62, 72, 147, 130, 62, 128, 252, 28, 186, 148, 75, 6, 62, 220, 211, 116, 62, 198, 49, 31, 61, 204, 228, 249, 61, 135, 121, 145, 62, 52, 65, 15, 189, 61, 176, 255, 61, 105, 55, 149, 62, 250, 41, 93, 189, 80, 6, 81, 188, 244, 96, 25, 188, 117, 140, 93, 189, 128, 177, 112, 187, 44, 169, 62, 188, 197, 142, 67, 189, 104, 5, 185, 61, 196, 66, 133, 62, 0, 133, 65, 189, 240, 110, 129, 60, 248, 44, 137, 62, 16, 109, 102, 188, 120, 156, 126, 189, 38, 106, 69, 59, 70, 220, 72, 189, 244, 113, 218, 188, 204, 156, 192, 187, 84, 32, 39, 189, 89, 190, 17, 189, 148, 152, 166, 61, 208, 200, 157, 60, 192, 38, 92, 61, 156, 29, 162, 62, 237, 147, 3, 189, 166, 233, 252, 61, 246, 43, 153, 62, 154, 170, 215, 59, 184, 46, 26, 60, 62, 213, 158, 62, 224, 126, 25, 189, 138, 149, 137, 60, 244, 124, 150, 62, 192, 77, 161, 60, 2, 111, 129, 60, 148, 122, 161, 62, 14, 133, 96, 53, 171, 202, 120, 190, 75, 84, 120, 191, 36, 145, 71, 188, 0, 0, 11, 15, 80, 23, 103, 181, 172, 202, 120, 62, 74, 84, 120, 63, 175, 241, 163, 190, 11, 0, 3, 4, 243, 170, 122, 190, 34, 198, 112, 191, 215, 56, 113, 62, 236, 60, 128, 189, 14, 0, 6, 16, 242, 170, 122, 62, 35, 198, 112, 63, 216, 56, 113, 190, 212, 247, 136, 189, 20, 0, 4, 6, 26, 54, 120, 191, 11, 40, 115, 62, 213, 156, 115, 189, 41, 18, 86, 189, 24, 0, 5, 1, 25, 54, 120, 63, 14, 40, 115, 190, 215, 156, 115, 61, 32, 48, 109, 189, 29, 0, 3, 7, 194, 188, 90, 63, 0, 17, 254, 62, 29, 156, 29, 190, 222, 230, 76, 189, 32, 0, 6, 6, 80, 91, 1, 191, 254, 88, 69, 63, 253, 143, 198, 190, 64, 214, 60, 189, 38, 0, 4, 31, 10, 225, 113, 191, 232, 52, 165, 190, 88, 81, 102, 61, 127, 171, 95, 189, 42, 0, 5, 14, 155, 54, 184, 62, 100, 170, 104, 191, 49, 29, 88, 62, 220, 214, 114, 189, 47, 0, 5, 11, 150, 201, 229, 190, 95, 143, 95, 63, 76, 43, 66, 190, 6, 66, 142, 189, 52, 0, 6, 1, 34, 229, 127, 63, 101, 90, 0, 60, 250, 152, 225, 60, 164, 182, 95, 189, 58, 0, 4, 21, 65, 160, 111, 191, 153, 116, 243, 60, 241, 134, 179, 62, 236, 246, 13, 190, 62, 0, 7, 4, 112, 175, 90, 62, 209, 15, 96, 63, 136, 51, 222, 190, 174, 114, 56, 189, 69, 0, 5, 29, 28, 207, 92, 63, 167, 127, 223, 187, 3, 134, 1, 63, 130, 174, 52, 190, 74, 0, 6, 21, 133, 29, 89, 61, 140, 153, 124, 63, 152, 60, 29, 62, 151, 18, 42, 190, 80, 0, 6, 2, 91, 235, 127, 191, 216, 115, 135, 187, 235, 209, 202, 60, 103, 92, 92, 189, 86, 0, 4, 4, 35, 52, 54, 191, 199, 210, 51, 191, 96, 198, 150, 187, 160, 202, 91, 189, 90, 0, 3, 18, 73, 39, 180, 190, 75, 232, 13, 189, 14, 119, 111, 63, 172, 56, 147, 190, 93, 0, 5, 8, 8, 4, 5, 1, 2, 24, 25, 20, 21, 0, 9, 27, 15, 28, 24, 2, 29, 30, 6, 26, 16, 10, 11, 17, 7, 3, 0, 21, 22, 1, 5, 13, 14, 4, 8, 10, 16, 18, 9, 0, 3, 12, 20, 25, 26, 6, 23, 29, 2, 1, 13, 31, 17, 11, 12, 3, 7, 19, 13, 5, 4, 14, 28, 19, 7, 22, 23, 6, 30, 8, 9, 12, 11, 10, 15, 27, 31, 13, 14, 18, 28, 15, 18, 16, 17, 19, 21, 20, 23, 22, 25, 24, 26, 27, 28, 30, 29, 31, 4, 7, 0, 7, 0, 4, 0, 9, 0, 5, 5, 9, 0, 2, 2, 9, 4, 10, 7, 10, 0, 11, 0, 6, 6, 11, 5, 11, 8, 12, 2, 8, 2, 12, 10, 12, 4, 12, 0, 13, 6, 13, 7, 13, 3, 13, 3, 6, 10, 13, 3, 10, 11, 14, 9, 14, 6, 14, 14, 15, 1, 14, 1, 15, 3, 15, 6, 15, 10, 15, 12, 15, 0, 16, 8, 16, 0, 8, 4, 16, 12, 16, 0, 17, 2, 17, 8, 17, 1, 18, 14, 18, 12, 18, 2, 18, 9, 18, 0, 4, 7, 0, 5, 9, 0, 2, 9, 4, 7, 10, 0, 6, 11, 0, 5, 11, 2, 8, 12, 4, 10, 12, 0, 6, 13, 0, 7, 13, 3, 6, 13, 3, 10, 13, 7, 10, 13, 5, 9, 11, 6, 11, 14, 1, 14, 15, 3, 6, 15, 3, 10, 15, 6, 14, 15, 10, 12, 15, 0, 8, 16, 0, 4, 16, 4, 12, 16, 8, 12, 16, 0, 2, 17, 0, 8, 17, 2, 8, 17, 1, 14, 18, 1, 12, 15, 2, 9, 18, 2, 12, 18, 9, 14, 18, 3, 0, 0, 0, 0, 0, 9, 0, 21, 0, 0, 0, 1, 0, 2, 0, 5, 0, 1, 0, 13, 0, 1, 0, 2, 0, 24, 0, 2, 0, 29, 0, 7, 0, 3, 0, 3, 0, 12, 0, 4, 0, 5, 0, 8, 0, 4, 0, 14, 0, 4, 0, 5, 0, 13, 0, 6, 0, 23, 0, 6, 0, 26, 0, 30, 0, 6, 0, 7, 0, 19, 0, 22, 0, 7, 0, 9, 0, 8, 0, 8, 0, 10, 0, 12, 0, 9, 0, 10, 0, 11, 0, 16, 0, 10, 0, 11, 0, 12, 0, 11, 0, 17, 0, 14, 0, 13, 0, 13, 0, 31, 0, 18, 0, 14, 0, 18, 0, 15, 0, 27, 0, 15, 0, 15, 0, 28, 0, 17, 0, 16, 0, 16, 0, 18, 0, 19, 0, 17, 0, 28, 0, 19, 0, 20, 0, 21, 0, 23, 0, 20, 0, 25, 0, 20, 0, 21, 0, 22, 0, 22, 0, 23, 0, 24, 0, 25, 0, 26, 0, 24, 0, 25, 0, 26, 0, 28, 0, 27, 0, 27, 0, 31, 0, 30, 0, 28, 0, 29, 0, 30, 0, 31, 0, 29, 0, 0, 0, 0, 0, 117, 140, 93, 189, 180, 98, 133, 189, 144, 117, 189, 188, 153, 77, 97, 61, 148, 75, 6, 62, 156, 29, 162, 62, 31, 168, 97, 59, 155, 67, 229, 56, 111, 202, 122, 51, 172, 9, 58, 51, 111, 202, 122, 51, 129, 167, 213, 56, 239, 249, 202, 183, 172, 9, 58, 51, 239, 249, 202, 183, 17, 180, 76, 55, 128, 79, 119, 184, 253, 182, 17, 61, 232, 43, 21, 62, 0, 0, 128, 191, 0, 0, 128, 191, 236, 242, 77, 61, 49, 207, 237, 60, 49, 207, 237, 60, 30, 47, 201, 61]
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, -0.2589999903962017, 1) )
            }

            over "ID11_000frA" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, -0.2589999903962017, 1) )
            }
        }
    }

    def Xform "panda_link6" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (2.6052564e-7, 3.9897228e-7, 4.704859e-7)
        bool physics:kinematicEnabled = 0
        float physics:mass = 1.1285807
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (0.7071065, 0.70710707, -3.1897798e-8, -2.3050234e-8)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-1.001358e-7, -1.9073486e-8, 1.0329999)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsRevoluteJoint "panda_joint7" (
            prepend apiSchemas = ["PhysxJointAPI", "PhysxLimitAPI:angular", "PhysicsDriveAPI:angular"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:angular:physics:damping = 52.35988
            float drive:angular:physics:maxForce = 720
            float drive:angular:physics:stiffness = 87.266464
            float drive:angular:physics:targetPosition = 44.999992
            uniform token drive:angular:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_link6>
            rel physics:body1 = </panda/panda_link7>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0.08799993, -1.0721087e-9, 1.7578487e-15)
            point3f physics:localPos1 = (-6.67572e-8, 5.5176814e-9, 1.5258803e-7)
            quatf physics:localRot0 = (-0.5, -0.5, 0.5, 0.5)
            quatf physics:localRot1 = (-0.70710677, -1.4290202e-7, 0.70710677, 1.6944921e-7)
            custom float physics:lowerLimit = -166.00307
            custom float physics:upperLimit = 166.00307
            bool physxJoint:enableProjection = 0
            float physxJoint:jointFriction = 0
            float physxJoint:maxJointVelocity = 572.9578
            float physxLimit:angular:bounceThreshold = 0
            float physxLimit:angular:contactDistance = 0
            float physxLimit:angular:damping = 0
            float physxLimit:angular:restitution = 0
            float physxLimit:angular:stiffness = 0
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_link6.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0.0000011319547)
            float3 xformOp:scale = (1, 1.0000004, 1.0000004)
            double3 xformOp:translate = (0, 0, -0.014999999664723873)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID389_001" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001frA" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 224, 24, 46, 74, 168, 214, 230, 100, 229, 210, 164, 188, 139, 251, 121, 9, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 31, 0, 0, 0, 47, 128, 0, 0, 18, 0, 0, 0, 94, 0, 0, 0, 141, 35, 68, 189, 70, 123, 38, 61, 106, 146, 157, 60, 144, 149, 43, 61, 10, 213, 162, 61, 64, 189, 54, 60, 24, 57, 7, 62, 9, 213, 162, 61, 80, 36, 224, 60, 141, 35, 68, 189, 176, 189, 211, 60, 131, 218, 100, 61, 25, 57, 7, 62, 10, 213, 162, 61, 80, 39, 202, 60, 141, 35, 68, 189, 114, 100, 236, 60, 144, 67, 37, 59, 141, 35, 68, 189, 112, 1, 25, 59, 92, 184, 192, 186, 6, 223, 194, 61, 9, 213, 162, 61, 29, 3, 187, 188, 248, 184, 179, 61, 9, 213, 162, 61, 20, 11, 173, 188, 40, 128, 125, 61, 60, 15, 91, 188, 148, 184, 238, 188, 25, 57, 7, 62, 128, 214, 16, 60, 37, 124, 48, 61, 25, 57, 7, 62, 165, 183, 81, 189, 75, 217, 36, 61, 203, 197, 161, 61, 10, 213, 162, 61, 82, 224, 66, 61, 232, 42, 185, 61, 10, 213, 162, 61, 6, 166, 69, 61, 145, 253, 148, 61, 184, 119, 177, 60, 149, 194, 140, 61, 128, 172, 158, 188, 96, 53, 229, 59, 148, 194, 140, 61, 30, 49, 45, 189, 244, 176, 215, 60, 250, 125, 118, 61, 70, 157, 155, 61, 130, 225, 207, 60, 204, 82, 138, 61, 36, 71, 180, 61, 165, 183, 81, 189, 69, 251, 112, 61, 170, 162, 135, 61, 83, 150, 21, 189, 149, 194, 140, 61, 160, 176, 79, 187, 4, 38, 171, 188, 149, 194, 140, 61, 141, 35, 68, 189, 10, 193, 155, 188, 4, 182, 22, 61, 141, 35, 68, 189, 28, 0, 175, 188, 196, 54, 48, 59, 104, 139, 42, 188, 165, 183, 81, 189, 168, 3, 21, 61, 224, 132, 92, 188, 165, 183, 81, 189, 128, 214, 211, 186, 52, 60, 197, 188, 99, 5, 31, 189, 18, 152, 59, 61, 25, 57, 7, 62, 165, 183, 81, 189, 248, 188, 79, 188, 25, 57, 7, 62, 0, 22, 150, 187, 252, 206, 84, 188, 104, 207, 175, 61, 164, 183, 81, 189, 147, 184, 238, 188, 168, 188, 178, 61, 208, 243, 208, 60, 148, 184, 238, 188, 189, 145, 200, 61, 82, 192, 133, 61, 139, 198, 209, 188, 0, 0, 0, 128, 0, 0, 128, 63, 0, 0, 0, 0, 10, 213, 162, 189, 0, 0, 7, 11, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 128, 25, 57, 7, 190, 7, 0, 6, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 165, 183, 81, 189, 13, 0, 6, 1, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 0, 0, 141, 35, 68, 189, 19, 0, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 148, 184, 238, 188, 25, 0, 3, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 149, 194, 140, 189, 28, 0, 4, 9, 224, 115, 192, 190, 48, 219, 65, 63, 252, 187, 8, 191, 117, 182, 29, 189, 32, 0, 4, 11, 94, 175, 176, 190, 223, 201, 94, 63, 11, 247, 179, 62, 242, 66, 112, 189, 36, 0, 5, 26, 138, 215, 134, 190, 67, 197, 42, 190, 133, 62, 115, 191, 52, 34, 95, 188, 41, 0, 5, 17, 37, 52, 225, 62, 58, 195, 71, 62, 159, 106, 96, 63, 244, 215, 199, 189, 46, 0, 4, 22, 245, 7, 15, 191, 70, 46, 166, 190, 200, 97, 67, 63, 254, 226, 121, 189, 50, 0, 6, 7, 240, 241, 66, 63, 101, 169, 135, 62, 95, 110, 23, 191, 23, 50, 219, 189, 56, 0, 4, 21, 41, 152, 99, 190, 116, 154, 20, 62, 3, 209, 118, 191, 253, 38, 75, 188, 60, 0, 7, 19, 186, 241, 198, 62, 74, 96, 50, 189, 217, 158, 107, 63, 189, 131, 185, 189, 67, 0, 6, 6, 16, 26, 99, 189, 45, 70, 178, 62, 110, 143, 111, 63, 130, 232, 138, 189, 73, 0, 6, 28, 132, 8, 34, 190, 219, 224, 51, 191, 130, 151, 49, 63, 58, 189, 128, 189, 79, 0, 5, 7, 6, 124, 38, 191, 216, 2, 66, 191, 134, 213, 85, 61, 71, 113, 66, 189, 84, 0, 5, 4, 40, 208, 171, 62, 195, 231, 204, 187, 126, 38, 113, 191, 239, 189, 103, 189, 89, 0, 5, 15, 2, 4, 7, 8, 1, 12, 13, 4, 2, 10, 11, 26, 27, 26, 11, 18, 23, 24, 28, 21, 3, 0, 5, 6, 22, 28, 9, 29, 19, 14, 15, 20, 5, 0, 1, 8, 0, 3, 16, 12, 1, 22, 6, 9, 28, 24, 10, 2, 13, 17, 3, 21, 25, 20, 15, 16, 4, 27, 30, 7, 6, 5, 8, 7, 30, 29, 9, 11, 10, 17, 14, 19, 18, 13, 12, 16, 15, 14, 17, 23, 18, 19, 20, 25, 21, 22, 24, 23, 25, 27, 26, 28, 29, 30, 6, 7, 3, 7, 3, 6, 0, 6, 0, 7, 0, 1, 1, 9, 0, 9, 7, 10, 3, 10, 0, 11, 1, 11, 3, 12, 6, 12, 8, 12, 3, 8, 0, 12, 11, 12, 4, 8, 4, 12, 1, 13, 9, 13, 2, 13, 1, 2, 0, 14, 7, 14, 9, 14, 5, 14, 13, 14, 5, 13, 10, 14, 5, 10, 13, 15, 2, 15, 5, 15, 10, 15, 3, 16, 10, 16, 8, 16, 2, 16, 15, 16, 2, 8, 1, 17, 2, 17, 11, 17, 4, 17, 12, 17, 3, 6, 7, 0, 6, 7, 0, 1, 9, 3, 7, 10, 0, 1, 11, 3, 6, 12, 3, 8, 12, 0, 11, 12, 0, 6, 12, 4, 8, 12, 1, 9, 13, 1, 2, 13, 0, 7, 14, 0, 9, 14, 5, 13, 14, 5, 10, 14, 7, 10, 14, 9, 13, 14, 2, 13, 15, 5, 13, 15, 5, 10, 15, 3, 10, 16, 3, 8, 16, 2, 15, 16, 2, 8, 16, 10, 15, 16, 1, 2, 17, 1, 11, 17, 2, 4, 8, 4, 12, 17, 11, 12, 17, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 5, 0, 8, 0, 1, 0, 1, 0, 12, 0, 2, 0, 4, 0, 2, 0, 10, 0, 13, 0, 2, 0, 3, 0, 16, 0, 21, 0, 3, 0, 4, 0, 7, 0, 27, 0, 4, 0, 5, 0, 6, 0, 8, 0, 5, 0, 6, 0, 9, 0, 6, 0, 22, 0, 7, 0, 8, 0, 30, 0, 7, 0, 28, 0, 9, 0, 9, 0, 29, 0, 10, 0, 11, 0, 17, 0, 10, 0, 11, 0, 18, 0, 11, 0, 26, 0, 12, 0, 13, 0, 16, 0, 12, 0, 13, 0, 17, 0, 14, 0, 15, 0, 17, 0, 14, 0, 19, 0, 14, 0, 15, 0, 16, 0, 15, 0, 20, 0, 19, 0, 18, 0, 18, 0, 23, 0, 20, 0, 19, 0, 25, 0, 20, 0, 22, 0, 21, 0, 21, 0, 25, 0, 24, 0, 22, 0, 23, 0, 24, 0, 25, 0, 23, 0, 24, 0, 28, 0, 26, 0, 27, 0, 28, 0, 26, 0, 27, 0, 30, 0, 29, 0, 28, 0, 30, 0, 29, 0, 0, 0, 0, 0, 140, 35, 68, 189, 164, 183, 81, 189, 148, 184, 238, 188, 25, 57, 7, 62, 10, 213, 162, 61, 149, 194, 140, 61, 33, 242, 195, 58, 114, 91, 84, 54, 213, 193, 74, 181, 126, 210, 175, 181, 213, 193, 74, 181, 153, 175, 13, 55, 63, 49, 105, 180, 126, 210, 175, 181, 63, 49, 105, 180, 122, 97, 19, 55, 83, 101, 82, 61, 56, 106, 251, 59, 47, 135, 168, 60, 0, 0, 128, 191, 0, 0, 128, 191, 48, 59, 46, 61, 202, 168, 135, 61, 83, 47, 201, 60, 83, 47, 201, 60]
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001jEI" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001m4u" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001pR3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001snf" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999878907768, 0, 0, 0), (0, 0.9999999878907768, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001wdn" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_001z0P" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID389_0012M1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }
        }
    }

    def Xform "panda_link7" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (6.316591e-8, 6.319639e-8, 1.0607721e-7)
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.40529126
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        token visibility = "inherited"
        quatf xformOp:orient = (1.4901165e-8, 1, 2.9802326e-8, 5.960465e-8)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.08799996, -5.7220458e-8, 1.033)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "geometry" (
            prepend references = @DetailedProps/panda_link7.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1, 1.0000005, 1.0000005)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID1683_001" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 247, 186, 12, 8, 102, 240, 102, 135, 149, 209, 13, 156, 185, 10, 225, 162, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 30, 0, 0, 0, 49, 128, 0, 0, 21, 0, 0, 0, 98, 0, 0, 0, 168, 97, 252, 60, 50, 80, 180, 61, 224, 203, 239, 60, 250, 149, 50, 61, 0, 213, 168, 185, 0, 182, 81, 57, 104, 177, 201, 188, 50, 80, 180, 61, 214, 1, 218, 60, 159, 144, 1, 189, 110, 92, 128, 61, 144, 94, 55, 61, 247, 121, 23, 189, 44, 238, 177, 60, 92, 244, 46, 61, 168, 126, 2, 188, 248, 149, 50, 189, 99, 47, 37, 61, 116, 189, 0, 189, 36, 159, 245, 188, 0, 182, 81, 57, 122, 190, 66, 188, 88, 159, 43, 189, 169, 33, 37, 61, 178, 158, 38, 60, 249, 149, 50, 189, 207, 242, 38, 61, 74, 115, 20, 61, 156, 252, 61, 61, 144, 94, 55, 61, 80, 36, 251, 60, 40, 4, 0, 61, 144, 94, 55, 61, 132, 119, 33, 61, 234, 115, 199, 60, 29, 44, 30, 61, 177, 127, 167, 60, 249, 149, 50, 189, 160, 222, 93, 60, 0, 0, 128, 178, 249, 149, 50, 189, 0, 182, 81, 57, 231, 142, 252, 60, 227, 142, 252, 188, 0, 182, 81, 57, 116, 250, 245, 60, 49, 80, 180, 61, 48, 239, 231, 60, 0, 42, 134, 58, 148, 223, 49, 61, 0, 182, 81, 57, 230, 142, 252, 60, 230, 142, 252, 60, 0, 182, 81, 57, 176, 63, 249, 188, 49, 80, 180, 61, 120, 137, 4, 61, 151, 2, 36, 189, 143, 166, 193, 60, 206, 120, 21, 61, 131, 162, 251, 60, 50, 80, 180, 61, 128, 143, 9, 61, 238, 11, 1, 61, 176, 35, 165, 61, 144, 94, 55, 61, 151, 202, 239, 188, 49, 80, 180, 61, 118, 141, 225, 60, 117, 189, 0, 189, 38, 159, 245, 60, 0, 182, 81, 57, 252, 149, 50, 189, 0, 236, 54, 185, 0, 182, 81, 57, 0, 178, 189, 186, 50, 80, 180, 61, 208, 224, 37, 61, 30, 58, 249, 188, 50, 80, 180, 61, 56, 166, 18, 61, 0, 125, 185, 58, 154, 200, 173, 61, 144, 94, 55, 61, 56, 202, 243, 188, 164, 30, 165, 61, 144, 94, 55, 61, 140, 66, 255, 188, 53, 39, 170, 61, 212, 107, 42, 61, 0, 0, 0, 128, 0, 0, 128, 63, 0, 0, 0, 0, 50, 80, 180, 189, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 249, 149, 50, 189, 8, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 0, 182, 81, 57, 12, 0, 8, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 144, 94, 55, 189, 20, 0, 6, 1, 247, 28, 52, 190, 112, 106, 217, 62, 78, 91, 99, 191, 104, 34, 148, 188, 26, 0, 4, 8, 139, 1, 95, 63, 246, 177, 186, 190, 38, 105, 168, 62, 211, 81, 28, 189, 30, 0, 5, 22, 57, 122, 96, 191, 49, 73, 183, 190, 39, 73, 164, 62, 69, 29, 29, 189, 35, 0, 5, 0, 46, 253, 60, 63, 121, 144, 156, 62, 70, 235, 25, 191, 172, 88, 3, 189, 40, 0, 4, 4, 148, 155, 114, 191, 219, 6, 102, 62, 14, 57, 104, 190, 193, 14, 41, 189, 44, 0, 3, 1, 201, 135, 125, 63, 97, 67, 12, 62, 84, 122, 171, 60, 87, 225, 48, 189, 47, 0, 6, 24, 30, 130, 217, 60, 94, 62, 5, 63, 78, 124, 90, 191, 4, 252, 183, 188, 53, 0, 3, 5, 77, 53, 194, 188, 202, 125, 64, 189, 39, 165, 127, 63, 70, 31, 46, 189, 56, 0, 6, 17, 64, 202, 97, 191, 108, 115, 188, 61, 144, 164, 236, 62, 110, 166, 94, 189, 62, 0, 5, 1, 19, 232, 202, 190, 179, 44, 106, 191, 203, 23, 161, 189, 199, 75, 35, 189, 67, 0, 4, 20, 39, 220, 240, 62, 147, 217, 49, 190, 54, 124, 93, 63, 50, 124, 67, 189, 71, 0, 4, 24, 86, 3, 169, 62, 5, 4, 76, 191, 249, 129, 1, 191, 58, 232, 13, 189, 75, 0, 3, 26, 250, 214, 56, 62, 239, 176, 218, 62, 39, 208, 98, 191, 55, 3, 152, 188, 78, 0, 3, 5, 19, 49, 125, 191, 208, 65, 23, 62, 84, 90, 72, 58, 160, 160, 48, 189, 81, 0, 5, 1, 114, 239, 238, 61, 51, 236, 84, 63, 240, 243, 10, 63, 226, 164, 194, 189, 86, 0, 4, 13, 138, 4, 62, 191, 50, 63, 154, 62, 101, 60, 25, 191, 245, 16, 4, 189, 90, 0, 3, 8, 73, 233, 211, 189, 99, 51, 67, 63, 9, 127, 35, 63, 5, 196, 190, 189, 93, 0, 5, 13, 25, 20, 0, 15, 2, 22, 18, 26, 12, 8, 5, 13, 23, 16, 17, 1, 14, 13, 6, 24, 9, 21, 27, 28, 3, 10, 22, 2, 16, 23, 8, 12, 14, 1, 11, 24, 6, 7, 4, 19, 1, 17, 15, 0, 18, 22, 24, 0, 20, 21, 9, 11, 1, 2, 15, 16, 4, 7, 5, 8, 10, 3, 19, 4, 3, 28, 29, 13, 5, 7, 6, 9, 10, 8, 11, 12, 13, 14, 17, 16, 15, 26, 18, 24, 19, 29, 20, 25, 27, 21, 23, 24, 22, 25, 26, 29, 28, 27, 7, 9, 0, 7, 0, 9, 5, 9, 2, 5, 2, 7, 0, 10, 4, 10, 0, 4, 11, 12, 3, 11, 3, 12, 6, 11, 6, 12, 11, 13, 1, 11, 1, 13, 6, 13, 2, 13, 2, 6, 11, 14, 5, 14, 1, 5, 3, 14, 9, 14, 3, 9, 1, 15, 5, 15, 2, 15, 10, 16, 7, 16, 2, 16, 2, 4, 0, 8, 8, 17, 0, 17, 6, 17, 12, 17, 9, 18, 0, 18, 3, 18, 4, 19, 8, 19, 2, 19, 0, 20, 18, 20, 17, 20, 3, 20, 12, 20, 0, 7, 9, 2, 5, 7, 0, 4, 10, 3, 11, 12, 6, 11, 12, 1, 11, 13, 2, 6, 13, 6, 11, 13, 1, 5, 11, 3, 9, 14, 3, 11, 14, 5, 9, 14, 1, 5, 15, 1, 2, 13, 2, 5, 15, 0, 7, 10, 2, 4, 10, 2, 7, 16, 0, 8, 17, 6, 12, 17, 0, 9, 18, 3, 9, 18, 0, 4, 8, 2, 4, 19, 2, 6, 8, 0, 18, 20, 0, 17, 20, 3, 18, 20, 3, 12, 20, 12, 17, 20, 0, 0, 1, 0, 0, 0, 15, 0, 20, 0, 0, 0, 1, 0, 11, 0, 1, 0, 14, 0, 17, 0, 1, 0, 15, 0, 2, 0, 2, 0, 16, 0, 2, 0, 22, 0, 3, 0, 4, 0, 3, 0, 10, 0, 28, 0, 3, 0, 7, 0, 4, 0, 4, 0, 19, 0, 7, 0, 5, 0, 8, 0, 5, 0, 5, 0, 13, 0, 6, 0, 7, 0, 13, 0, 6, 0, 6, 0, 24, 0, 8, 0, 10, 0, 11, 0, 8, 0, 12, 0, 8, 0, 10, 0, 9, 0, 9, 0, 11, 0, 9, 0, 21, 0, 13, 0, 12, 0, 12, 0, 14, 0, 14, 0, 13, 0, 15, 0, 16, 0, 17, 0, 15, 0, 16, 0, 17, 0, 23, 0, 16, 0, 22, 0, 18, 0, 24, 0, 18, 0, 18, 0, 26, 0, 19, 0, 24, 0, 29, 0, 19, 0, 20, 0, 21, 0, 25, 0, 20, 0, 21, 0, 27, 0, 23, 0, 22, 0, 22, 0, 24, 0, 24, 0, 23, 0, 26, 0, 25, 0, 25, 0, 27, 0, 29, 0, 26, 0, 27, 0, 28, 0, 28, 0, 29, 0, 0, 0, 0, 0, 252, 149, 50, 189, 248, 149, 50, 189, 0, 182, 81, 57, 250, 149, 50, 61, 50, 80, 180, 61, 144, 94, 55, 61, 237, 122, 169, 57, 68, 148, 59, 53, 114, 87, 223, 47, 176, 80, 69, 176, 114, 87, 223, 47, 129, 85, 185, 52, 168, 38, 81, 180, 176, 80, 69, 176, 168, 38, 81, 180, 240, 172, 35, 53, 208, 128, 165, 56, 98, 237, 170, 60, 184, 215, 187, 60, 0, 0, 128, 191, 0, 0, 128, 191, 202, 181, 168, 60, 71, 207, 66, 60, 72, 237, 34, 61, 71, 207, 66, 60]
                matrix4d xformOp:transform = ( (0.7071066782751968, -0.7071068369578968, 0, 0), (0.7071068369578968, 0.7071066782751968, 0, 0), (0, 0, 0.9999999776482582, 0), (-6.617444752512802e-24, 0, 0.05200000169873231, 1) )
            }

            over "ID1683_001frA" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                point3f physics:centerOfMass = (0, 0, 0)
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 144, 42, 32, 88, 71, 75, 173, 131, 112, 188, 77, 221, 97, 37, 99, 146, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 31, 0, 0, 0, 47, 128, 0, 0, 18, 0, 0, 0, 94, 0, 0, 0, 104, 209, 233, 188, 55, 164, 213, 188, 19, 133, 96, 61, 43, 102, 64, 61, 128, 149, 68, 60, 42, 167, 15, 58, 202, 64, 35, 61, 0, 214, 216, 188, 96, 198, 223, 184, 81, 245, 68, 189, 40, 196, 24, 188, 129, 150, 33, 61, 110, 67, 64, 189, 192, 215, 12, 188, 2, 7, 46, 187, 224, 63, 19, 189, 92, 117, 230, 60, 151, 181, 248, 186, 96, 47, 225, 60, 242, 57, 31, 61, 228, 70, 114, 57, 236, 94, 59, 188, 211, 17, 60, 61, 186, 233, 113, 186, 168, 162, 113, 60, 206, 6, 55, 189, 10, 215, 144, 186, 128, 175, 56, 58, 90, 6, 95, 189, 150, 16, 12, 61, 163, 212, 56, 188, 238, 136, 62, 61, 130, 58, 38, 61, 240, 179, 23, 189, 119, 113, 228, 60, 16, 144, 52, 61, 192, 100, 110, 187, 10, 179, 242, 60, 239, 75, 102, 61, 162, 120, 1, 189, 220, 58, 130, 60, 140, 10, 98, 61, 160, 82, 217, 187, 38, 60, 59, 61, 53, 88, 48, 61, 180, 152, 33, 189, 172, 72, 165, 60, 194, 19, 72, 61, 140, 250, 53, 61, 12, 174, 86, 60, 86, 199, 53, 61, 210, 121, 204, 60, 227, 202, 35, 61, 126, 14, 50, 61, 227, 127, 244, 60, 192, 150, 190, 59, 245, 140, 105, 61, 200, 217, 102, 60, 202, 8, 220, 60, 34, 120, 104, 61, 48, 50, 188, 60, 238, 85, 37, 61, 195, 118, 54, 61, 104, 126, 24, 189, 236, 154, 202, 188, 238, 198, 66, 61, 108, 8, 4, 189, 240, 147, 236, 188, 250, 89, 30, 187, 114, 127, 181, 188, 192, 14, 26, 189, 26, 211, 15, 187, 96, 234, 116, 187, 146, 244, 91, 189, 78, 185, 12, 61, 150, 182, 2, 189, 129, 119, 240, 188, 196, 225, 83, 61, 50, 62, 23, 61, 180, 51, 230, 188, 92, 51, 43, 61, 100, 193, 132, 60, 30, 117, 48, 189, 228, 145, 57, 61, 198, 126, 219, 60, 16, 20, 93, 188, 154, 69, 104, 61, 8, 51, 65, 60, 222, 230, 242, 188, 105, 150, 101, 61, 138, 239, 26, 61, 104, 74, 182, 188, 167, 97, 55, 61, 168, 158, 1, 61, 206, 199, 54, 60, 25, 219, 127, 191, 174, 151, 140, 186, 0, 0, 9, 0, 193, 27, 79, 63, 86, 63, 22, 63, 226, 193, 3, 61, 2, 146, 56, 189, 9, 0, 4, 3, 53, 65, 22, 63, 157, 64, 79, 191, 77, 108, 28, 60, 90, 150, 55, 189, 13, 0, 5, 5, 52, 65, 22, 191, 157, 64, 79, 63, 126, 108, 28, 188, 116, 201, 51, 189, 18, 0, 4, 2, 193, 27, 79, 191, 86, 63, 22, 191, 226, 193, 3, 189, 63, 143, 48, 189, 22, 0, 4, 1, 152, 158, 1, 189, 216, 199, 54, 188, 25, 219, 127, 63, 224, 72, 101, 189, 26, 0, 7, 5, 131, 10, 47, 63, 176, 46, 245, 189, 113, 70, 56, 63, 42, 218, 120, 189, 33, 0, 4, 4, 150, 233, 163, 189, 229, 129, 35, 191, 124, 233, 67, 63, 118, 103, 121, 189, 37, 0, 6, 7, 116, 204, 157, 61, 200, 229, 35, 63, 15, 170, 67, 63, 220, 143, 124, 189, 43, 0, 4, 8, 150, 49, 37, 191, 218, 187, 92, 189, 210, 20, 67, 63, 238, 73, 124, 189, 47, 0, 6, 1, 60, 52, 123, 63, 88, 241, 58, 190, 115, 32, 124, 61, 238, 245, 51, 189, 53, 0, 5, 4, 209, 43, 117, 191, 220, 240, 146, 62, 171, 239, 172, 188, 70, 65, 46, 189, 58, 0, 5, 2, 208, 181, 54, 62, 234, 220, 123, 63, 29, 170, 116, 188, 143, 186, 48, 189, 63, 0, 6, 24, 246, 211, 44, 190, 138, 64, 110, 191, 153, 49, 166, 190, 128, 156, 33, 189, 69, 0, 4, 20, 146, 69, 157, 190, 145, 107, 17, 63, 67, 118, 67, 63, 145, 88, 121, 189, 73, 0, 6, 8, 169, 120, 253, 62, 168, 205, 194, 62, 172, 247, 71, 63, 100, 4, 124, 189, 79, 0, 5, 22, 175, 159, 39, 191, 13, 125, 65, 191, 246, 236, 50, 187, 85, 226, 47, 189, 84, 0, 5, 6, 191, 108, 235, 62, 111, 99, 234, 190, 170, 203, 66, 63, 119, 129, 124, 189, 89, 0, 5, 5, 22, 4, 5, 7, 6, 1, 2, 8, 23, 16, 1, 6, 17, 8, 2, 26, 27, 9, 10, 7, 5, 11, 21, 3, 4, 22, 28, 18, 19, 12, 13, 0, 29, 18, 28, 30, 16, 24, 9, 27, 29, 0, 25, 20, 14, 12, 19, 3, 21, 25, 0, 13, 15, 1, 16, 30, 26, 2, 4, 3, 15, 11, 5, 17, 6, 7, 10, 14, 20, 23, 8, 9, 24, 10, 11, 15, 13, 12, 14, 16, 17, 20, 19, 18, 21, 22, 23, 24, 25, 27, 26, 30, 28, 29, 5, 9, 7, 9, 5, 7, 0, 10, 0, 1, 1, 10, 0, 2, 2, 10, 4, 11, 9, 11, 4, 9, 0, 11, 0, 4, 0, 3, 3, 11, 0, 12, 1, 12, 3, 12, 2, 13, 0, 13, 7, 13, 2, 7, 3, 14, 12, 14, 11, 14, 5, 14, 8, 14, 5, 8, 9, 14, 8, 12, 1, 15, 6, 15, 6, 10, 12, 15, 5, 15, 5, 6, 8, 15, 4, 16, 9, 16, 0, 16, 13, 16, 7, 16, 2, 17, 10, 17, 7, 17, 5, 17, 6, 17, 5, 7, 9, 0, 1, 10, 0, 2, 10, 4, 9, 11, 0, 4, 11, 0, 3, 11, 0, 1, 12, 0, 3, 12, 0, 2, 13, 2, 7, 13, 3, 12, 14, 3, 11, 14, 5, 8, 14, 5, 9, 14, 8, 12, 14, 9, 11, 14, 1, 6, 10, 1, 12, 15, 5, 6, 15, 5, 8, 15, 8, 12, 15, 4, 9, 16, 0, 4, 16, 0, 13, 16, 7, 13, 16, 7, 9, 16, 2, 10, 17, 2, 7, 17, 5, 6, 17, 5, 7, 17, 6, 10, 17, 13, 0, 0, 0, 0, 0, 25, 0, 0, 0, 29, 0, 1, 0, 2, 0, 6, 0, 1, 0, 16, 0, 1, 0, 2, 0, 8, 0, 2, 0, 26, 0, 3, 0, 4, 0, 15, 0, 3, 0, 21, 0, 3, 0, 4, 0, 5, 0, 22, 0, 4, 0, 5, 0, 7, 0, 5, 0, 11, 0, 7, 0, 6, 0, 6, 0, 17, 0, 10, 0, 7, 0, 9, 0, 8, 0, 8, 0, 23, 0, 24, 0, 9, 0, 27, 0, 9, 0, 11, 0, 10, 0, 10, 0, 14, 0, 15, 0, 11, 0, 12, 0, 13, 0, 14, 0, 12, 0, 19, 0, 12, 0, 13, 0, 15, 0, 20, 0, 14, 0, 17, 0, 16, 0, 16, 0, 18, 0, 30, 0, 16, 0, 20, 0, 17, 0, 18, 0, 19, 0, 28, 0, 18, 0, 19, 0, 20, 0, 22, 0, 21, 0, 21, 0, 25, 0, 23, 0, 22, 0, 24, 0, 23, 0, 25, 0, 24, 0, 26, 0, 27, 0, 30, 0, 26, 0, 27, 0, 29, 0, 29, 0, 28, 0, 28, 0, 30, 0, 0, 0, 0, 0, 81, 245, 68, 189, 90, 6, 95, 189, 0, 7, 46, 187, 43, 102, 64, 61, 238, 136, 62, 61, 245, 140, 105, 61, 243, 76, 178, 57, 246, 34, 1, 53, 90, 147, 60, 175, 16, 104, 171, 48, 90, 147, 60, 175, 194, 65, 253, 52, 164, 164, 154, 49, 16, 104, 171, 48, 164, 164, 154, 49, 96, 79, 178, 52, 72, 109, 88, 185, 123, 29, 16, 186, 38, 176, 211, 60, 0, 0, 128, 191, 0, 0, 128, 191, 172, 117, 220, 60, 156, 144, 126, 60, 174, 34, 43, 61, 156, 144, 126, 60]
                matrix4d xformOp:transform = ( (0.7071066782751968, -0.7071068369578968, 0, 0), (0.7071068369578968, 0.7071066782751968, 0, 0), (0, 0, 0.9999999776482582, 0), (-6.617444752512802e-24, 0, 0.05200000169873231, 1) )
            }

            over "ID1683_001jEI" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.7071066782751968, -0.7071068369578968, 0, 0), (0.7071068369578968, 0.7071066782751968, 0, 0), (0, 0, 0.9999999776482582, 0), (-6.617444752512802e-24, 0, 0.05200000169873231, 1) )
            }
        }

        def PhysicsFixedJoint "panda_joint8"
        {
            rel physics:body0 = </panda/panda_link7>
            rel physics:body1 = </panda/panda_link8>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0, 0, 0.10699999)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.70710677, 0, 0.70710677, 0)
            quatf physics:localRot1 = (0.70710677, 0, 0.70710677, 0)
        }
    }

    def Xform "panda_link8" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float physics:mass = 0.1
        vector3f physics:velocity = (0, 0, 0)
        quatf xformOp:orient = (6.123234e-17, 1, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.08799997, -4.982948e-8, 0.92599994)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsFixedJoint "panda_hand_joint"
        {
            rel physics:body0 = </panda/panda_link8>
            rel physics:body1 = </panda/panda_hand>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0, 0, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.9238795, 0, 0, -0.38268346)
            quatf physics:localRot1 = (1, 0, 0, 0)
        }
    }

    def Xform "panda_hand" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (2.3394448e-7, 5.7827858e-8, 2.1310294e-7)
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.5583305
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (1.8571878e-9, 0.92387944, 0.3826836, -2.3283063e-10)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.08799997, -5.364418e-8, 0.92599994)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def PhysicsPrismaticJoint "panda_finger_joint1" (
            prepend apiSchemas = ["PhysicsDriveAPI:linear"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:linear:physics:damping = 1000
            float drive:linear:physics:maxForce = 720
            float drive:linear:physics:stiffness = 6000
            float drive:linear:physics:targetPosition = 0.04
            float drive:linear:physics:targetVelocity = 0
            uniform token drive:linear:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_hand>
            rel physics:body1 = </panda/panda_leftfinger>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0, 0, 0.05839997)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.70710653, 0, 0, 0.7071066)
            quatf physics:localRot1 = (0.70710653, 0, 0, 0.7071066)
            custom float physics:lowerLimit = 0
            custom float physics:upperLimit = 0.04
            custom float physxJoint:maxJointVelocity = 10
        }

        def PhysicsPrismaticJoint "panda_finger_joint2" (
            prepend apiSchemas = ["PhysicsDriveAPI:linear"]
        )
        {
            uniform token articulationType = "articulatedJoint"
            float drive:linear:physics:damping = 1000
            float drive:linear:physics:maxForce = 720
            float drive:linear:physics:stiffness = 6000
            float drive:linear:physics:targetPosition = 0.04
            float drive:linear:physics:targetVelocity = 0
            uniform token drive:linear:physics:type = "force"
            float jointFriction = 0
            custom token physics:axis = "X"
            rel physics:body0 = </panda/panda_hand>
            rel physics:body1 = </panda/panda_rightfinger>
            float physics:breakForce = 3.4028233e36
            float physics:breakTorque = 3.4028233e34
            point3f physics:localPos0 = (0, 0, 0.05839997)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071066, 0, 0, -0.70710653)
            quatf physics:localRot1 = (0.7071066, 0, 0, -0.70710653)
            custom float physics:lowerLimit = 0
            custom float physics:upperLimit = 0.04
            custom float physxJoint:maxJointVelocity = 10
        }

        def "geometry" (
            prepend references = @DetailedProps/panda_hand_realsense.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1.0000001, 0.9999986, 0.9999987)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "ID234_001frA" (
            )
            {
            }

            over "ID234_001m4u" (
            )
            {
            }

            over "realsense"
            {
                double3 xformOp:translate = (0, 0, 0)

                over "ID4_000" (
                    prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
                )
                {
                    float physxCollision:contactOffset = -inf
                    float physxCollision:restOffset = -inf
                    float physxConvexHullCollision:minThickness = 0.000010000001
                    uchar[] physxCookedData:convexHull:buffer = [9, 204, 210, 31, 125, 57, 119, 21, 22, 208, 45, 62, 181, 115, 228, 152, 214, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 49, 128, 0, 0, 19, 0, 0, 0, 98, 0, 0, 0, 18, 58, 51, 61, 192, 94, 56, 189, 242, 9, 81, 61, 145, 65, 83, 61, 192, 94, 56, 189, 242, 9, 81, 61, 106, 152, 20, 61, 229, 252, 220, 60, 231, 23, 44, 61, 106, 152, 20, 61, 41, 211, 231, 188, 215, 138, 46, 61, 198, 140, 33, 61, 199, 143, 14, 61, 243, 9, 81, 61, 73, 131, 32, 61, 236, 110, 5, 189, 243, 9, 81, 61, 125, 212, 120, 61, 132, 30, 18, 61, 16, 202, 16, 61, 214, 137, 110, 61, 24, 81, 9, 189, 243, 9, 81, 61, 52, 7, 111, 61, 58, 38, 11, 61, 243, 9, 81, 61, 105, 152, 20, 61, 233, 85, 254, 60, 110, 231, 241, 60, 105, 152, 20, 61, 200, 156, 9, 189, 204, 183, 248, 60, 110, 195, 32, 61, 98, 79, 14, 61, 134, 119, 212, 60, 44, 244, 25, 61, 224, 149, 19, 61, 68, 150, 228, 60, 121, 149, 75, 61, 193, 94, 56, 189, 134, 119, 212, 60, 200, 3, 38, 61, 192, 94, 56, 189, 222, 191, 251, 60, 194, 183, 35, 61, 74, 192, 3, 189, 134, 119, 212, 60, 218, 189, 24, 61, 174, 246, 22, 189, 230, 41, 239, 60, 126, 212, 120, 61, 166, 110, 12, 189, 122, 44, 238, 60, 126, 212, 120, 61, 60, 132, 27, 189, 112, 72, 13, 61, 148, 251, 86, 61, 193, 94, 56, 189, 134, 119, 212, 60, 255, 248, 103, 61, 193, 94, 56, 189, 156, 178, 13, 61, 194, 170, 99, 61, 26, 62, 36, 189, 134, 119, 212, 60, 126, 212, 120, 61, 40, 246, 16, 61, 107, 223, 233, 60, 126, 212, 120, 61, 56, 194, 24, 61, 240, 61, 254, 60, 109, 243, 97, 61, 123, 248, 55, 61, 234, 187, 22, 61, 22, 132, 83, 61, 56, 48, 30, 61, 133, 119, 212, 60, 219, 120, 103, 61, 115, 187, 18, 61, 134, 119, 212, 60, 116, 181, 92, 61, 123, 248, 55, 61, 200, 44, 47, 61, 88, 93, 78, 61, 123, 248, 55, 61, 36, 12, 8, 61, 112, 163, 89, 61, 244, 159, 48, 61, 243, 9, 81, 61, 133, 238, 38, 61, 83, 227, 32, 61, 243, 9, 81, 61, 2, 209, 35, 61, 164, 46, 45, 61, 27, 203, 10, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 243, 9, 81, 189, 0, 0, 8, 25, 0, 0, 128, 63, 0, 0, 0, 0, 0, 0, 0, 128, 126, 212, 120, 189, 8, 0, 5, 9, 0, 0, 0, 0, 0, 0, 128, 191, 0, 0, 0, 0, 193, 94, 56, 189, 13, 0, 6, 24, 0, 0, 0, 128, 0, 0, 128, 63, 0, 0, 0, 0, 123, 248, 55, 189, 19, 0, 3, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 191, 134, 119, 212, 60, 22, 0, 7, 4, 0, 0, 128, 191, 0, 0, 0, 0, 0, 0, 0, 0, 106, 152, 20, 61, 29, 0, 4, 17, 233, 170, 109, 191, 229, 162, 174, 190, 209, 7, 23, 62, 125, 89, 145, 60, 33, 0, 6, 23, 1, 153, 116, 191, 226, 168, 143, 62, 54, 90, 187, 61, 29, 118, 190, 60, 39, 0, 6, 18, 34, 4, 86, 63, 21, 46, 248, 190, 133, 173, 131, 62, 205, 222, 159, 189, 45, 0, 4, 12, 253, 146, 90, 63, 57, 130, 249, 62, 144, 132, 59, 62, 62, 22, 155, 189, 49, 0, 6, 14, 196, 210, 113, 191, 131, 157, 104, 59, 7, 2, 168, 62, 203, 1, 167, 60, 55, 0, 4, 17, 40, 20, 125, 63, 180, 132, 229, 186, 155, 62, 26, 62, 171, 197, 133, 189, 59, 0, 4, 9, 0, 226, 101, 190, 101, 178, 55, 63, 31, 201, 40, 191, 80, 126, 128, 58, 63, 0, 5, 1, 212, 57, 68, 191, 192, 97, 7, 188, 15, 102, 36, 191, 157, 159, 64, 61, 68, 0, 6, 8, 158, 60, 6, 63, 132, 61, 210, 187, 255, 249, 89, 191, 72, 213, 239, 187, 74, 0, 4, 4, 40, 211, 223, 190, 231, 147, 169, 190, 210, 15, 86, 191, 26, 135, 233, 60, 78, 0, 4, 29, 111, 184, 72, 63, 196, 252, 252, 190, 169, 81, 192, 190, 186, 193, 91, 189, 82, 0, 5, 30, 38, 92, 212, 62, 247, 245, 56, 63, 72, 154, 13, 191, 120, 66, 15, 189, 87, 0, 6, 0, 203, 89, 149, 190, 204, 157, 112, 63, 31, 178, 53, 62, 248, 157, 11, 189, 93, 0, 5, 19, 0, 1, 7, 8, 29, 30, 4, 5, 17, 22, 23, 6, 18, 13, 19, 20, 1, 0, 14, 27, 24, 28, 11, 25, 26, 21, 19, 13, 15, 2, 9, 10, 3, 3, 10, 16, 14, 0, 5, 9, 2, 4, 30, 31, 12, 18, 7, 1, 20, 6, 23, 24, 27, 29, 8, 2, 3, 5, 4, 18, 6, 8, 7, 28, 25, 11, 12, 31, 10, 9, 12, 11, 15, 16, 22, 17, 21, 26, 13, 14, 16, 15, 17, 18, 20, 19, 21, 23, 22, 26, 25, 28, 24, 27, 28, 31, 30, 29, 0, 2, 0, 6, 2, 6, 0, 8, 2, 8, 5, 10, 7, 10, 5, 7, 6, 10, 5, 6, 0, 10, 0, 7, 9, 11, 1, 11, 1, 9, 0, 11, 8, 11, 0, 9, 5, 13, 7, 13, 6, 13, 12, 13, 4, 13, 4, 12, 7, 12, 2, 15, 4, 15, 2, 4, 6, 15, 13, 15, 1, 16, 14, 16, 1, 14, 8, 16, 2, 16, 4, 16, 4, 14, 1, 17, 14, 17, 9, 17, 3, 9, 3, 17, 4, 17, 12, 17, 3, 18, 9, 18, 12, 18, 0, 18, 7, 18, 0, 2, 6, 0, 2, 8, 5, 7, 10, 5, 6, 10, 0, 7, 10, 0, 6, 10, 1, 9, 11, 0, 8, 11, 0, 9, 11, 5, 7, 13, 5, 6, 13, 4, 12, 13, 7, 12, 13, 2, 4, 15, 2, 6, 15, 4, 13, 15, 6, 13, 15, 1, 14, 16, 1, 8, 11, 2, 4, 16, 2, 8, 16, 4, 14, 16, 1, 14, 17, 1, 9, 17, 3, 9, 17, 4, 12, 17, 4, 14, 17, 3, 9, 18, 3, 12, 17, 0, 9, 18, 0, 7, 18, 7, 12, 18, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0, 14, 0, 1, 0, 7, 0, 20, 0, 1, 0, 3, 0, 2, 0, 2, 0, 4, 0, 2, 0, 9, 0, 5, 0, 3, 0, 10, 0, 3, 0, 4, 0, 5, 0, 30, 0, 4, 0, 8, 0, 6, 0, 6, 0, 18, 0, 23, 0, 6, 0, 7, 0, 8, 0, 18, 0, 7, 0, 8, 0, 29, 0, 9, 0, 10, 0, 12, 0, 9, 0, 10, 0, 16, 0, 11, 0, 12, 0, 15, 0, 11, 0, 11, 0, 25, 0, 31, 0, 12, 0, 14, 0, 13, 0, 13, 0, 15, 0, 13, 0, 19, 0, 16, 0, 14, 0, 15, 0, 16, 0, 18, 0, 17, 0, 17, 0, 21, 0, 17, 0, 22, 0, 20, 0, 18, 0, 19, 0, 20, 0, 21, 0, 19, 0, 26, 0, 21, 0, 22, 0, 23, 0, 26, 0, 22, 0, 23, 0, 24, 0, 27, 0, 24, 0, 24, 0, 28, 0, 25, 0, 26, 0, 28, 0, 25, 0, 28, 0, 27, 0, 27, 0, 29, 0, 31, 0, 28, 0, 29, 0, 30, 0, 30, 0, 31, 0, 0, 0, 0, 0, 106, 152, 20, 61, 193, 94, 56, 189, 134, 119, 212, 60, 126, 212, 120, 61, 123, 248, 55, 61, 243, 9, 81, 61, 42, 240, 68, 56, 110, 145, 211, 51, 90, 23, 0, 49, 48, 79, 187, 179, 90, 23, 0, 49, 26, 27, 69, 52, 66, 163, 195, 48, 48, 79, 187, 179, 66, 163, 195, 48, 234, 33, 22, 52, 45, 185, 70, 61, 138, 249, 90, 186, 197, 219, 28, 61, 0, 0, 128, 191, 0, 0, 128, 191, 8, 210, 61, 60, 144, 47, 219, 59, 144, 117, 40, 61, 144, 47, 219, 59]
                    matrix4d xformOp:transform = ( (-1.6292067375187122e-7, 0.9999999776482584, 0, 0), (-0.9999999776482584, -1.6292067375187122e-7, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "ID4_000m4u" (
                    prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
                )
                {
                    float physxCollision:contactOffset = -inf
                    float physxCollision:restOffset = -inf
                    float physxConvexHullCollision:minThickness = 0.000010000001
                    uchar[] physxCookedData:convexHull:buffer = [9, 38, 123, 136, 178, 178, 155, 39, 81, 48, 197, 229, 126, 176, 25, 11, 36, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 31, 0, 0, 0, 80, 128, 0, 0, 51, 0, 0, 0, 160, 0, 0, 0, 61, 241, 149, 60, 97, 229, 208, 60, 62, 45, 8, 61, 129, 75, 70, 61, 215, 206, 239, 60, 159, 217, 197, 60, 83, 241, 149, 60, 94, 248, 212, 60, 176, 70, 247, 59, 59, 241, 149, 60, 95, 229, 208, 188, 62, 45, 8, 61, 208, 222, 149, 60, 121, 216, 212, 188, 165, 78, 247, 59, 49, 73, 70, 61, 39, 207, 239, 188, 127, 214, 197, 60, 51, 245, 149, 60, 174, 145, 225, 59, 195, 183, 51, 61, 41, 241, 149, 60, 140, 27, 222, 187, 70, 225, 51, 61, 233, 178, 20, 61, 250, 123, 164, 185, 78, 252, 51, 61, 46, 189, 70, 61, 245, 109, 220, 188, 26, 158, 138, 60, 171, 246, 82, 61, 104, 148, 157, 188, 119, 54, 110, 60, 127, 51, 3, 61, 64, 207, 87, 48, 34, 76, 247, 59, 28, 3, 79, 61, 201, 139, 153, 60, 97, 44, 100, 60, 138, 36, 93, 61, 8, 124, 198, 188, 192, 245, 151, 60, 41, 250, 87, 61, 61, 184, 229, 188, 116, 50, 197, 60, 97, 246, 99, 61, 162, 214, 192, 188, 188, 62, 194, 60, 101, 79, 92, 61, 33, 103, 211, 188, 20, 18, 210, 60, 157, 32, 68, 61, 238, 12, 228, 60, 69, 169, 148, 60, 38, 246, 87, 61, 218, 189, 229, 60, 67, 50, 197, 60, 40, 36, 89, 61, 130, 128, 207, 60, 140, 126, 149, 60, 129, 132, 95, 61, 66, 8, 178, 60, 43, 160, 150, 60, 15, 55, 100, 61, 171, 181, 189, 60, 169, 182, 196, 60, 95, 79, 92, 61, 215, 102, 211, 60, 52, 18, 210, 60, 215, 156, 235, 60, 45, 104, 101, 188, 216, 69, 247, 59, 232, 50, 60, 61, 252, 83, 207, 60, 223, 236, 115, 60, 183, 39, 234, 60, 202, 166, 106, 60, 176, 70, 247, 59, 102, 217, 77, 61, 56, 77, 231, 60, 21, 178, 209, 60, 8, 132, 76, 61, 17, 128, 229, 188, 183, 36, 211, 60, 31, 16, 96, 61, 89, 51, 207, 60, 139, 226, 176, 60, 138, 59, 99, 61, 131, 173, 189, 188, 120, 101, 204, 60, 175, 19, 81, 61, 52, 134, 222, 188, 207, 60, 153, 60, 0, 0, 128, 191, 18, 18, 50, 57, 54, 74, 35, 57, 154, 229, 149, 60, 0, 0, 6, 21, 166, 237, 242, 189, 35, 37, 126, 63, 191, 96, 157, 60, 47, 212, 194, 188, 6, 0, 3, 5, 36, 74, 243, 189, 111, 36, 126, 191, 142, 231, 152, 60, 196, 166, 194, 188, 9, 0, 3, 1, 82, 17, 34, 187, 41, 237, 61, 59, 135, 255, 127, 63, 226, 156, 51, 189, 12, 0, 3, 4, 126, 252, 134, 62, 50, 145, 193, 190, 178, 47, 99, 191, 244, 57, 2, 188, 15, 0, 3, 6, 134, 2, 137, 61, 246, 213, 114, 191, 22, 105, 158, 190, 60, 204, 192, 188, 18, 0, 3, 0, 246, 251, 169, 62, 75, 88, 222, 187, 37, 121, 113, 191, 160, 105, 102, 187, 21, 0, 3, 6, 139, 232, 225, 62, 118, 22, 214, 190, 73, 69, 75, 191, 138, 123, 157, 188, 24, 0, 3, 6, 243, 235, 80, 63, 203, 175, 11, 191, 97, 243, 66, 190, 63, 41, 92, 189, 27, 0, 3, 0, 207, 147, 84, 63, 137, 81, 6, 191, 225, 14, 64, 62, 235, 12, 129, 189, 30, 0, 3, 2, 244, 207, 133, 62, 37, 239, 110, 63, 105, 8, 124, 190, 56, 99, 11, 189, 33, 0, 3, 3, 64, 37, 212, 62, 45, 34, 85, 63, 179, 61, 188, 190, 87, 222, 20, 189, 36, 0, 3, 3, 125, 158, 192, 60, 248, 203, 120, 63, 150, 255, 111, 190, 186, 3, 196, 188, 39, 0, 3, 5, 98, 215, 122, 63, 82, 68, 182, 182, 147, 136, 76, 190, 85, 248, 75, 189, 42, 0, 3, 7, 165, 191, 115, 63, 160, 133, 86, 188, 203, 89, 156, 190, 31, 168, 60, 189, 45, 0, 3, 6, 15, 200, 87, 63, 253, 113, 77, 188, 194, 181, 9, 191, 226, 197, 18, 189, 48, 0, 3, 6, 79, 70, 61, 63, 158, 184, 1, 60, 113, 91, 44, 191, 222, 131, 230, 188, 51, 0, 3, 7, 157, 196, 33, 63, 118, 28, 123, 62, 214, 55, 60, 191, 253, 101, 215, 188, 54, 0, 3, 7, 187, 165, 87, 63, 169, 131, 3, 63, 171, 171, 38, 62, 134, 125, 128, 189, 57, 0, 3, 4, 89, 64, 47, 63, 140, 167, 81, 61, 3, 38, 58, 63, 226, 154, 104, 189, 60, 0, 3, 4, 127, 30, 143, 62, 163, 153, 133, 189, 36, 58, 117, 191, 56, 6, 226, 186, 63, 0, 3, 6, 91, 47, 120, 62, 171, 233, 88, 190, 246, 95, 114, 191, 236, 254, 54, 187, 66, 0, 3, 6, 209, 203, 72, 62, 120, 253, 54, 63, 76, 216, 43, 191, 32, 35, 140, 188, 69, 0, 3, 3, 126, 199, 167, 62, 178, 98, 36, 63, 31, 106, 49, 191, 168, 243, 171, 188, 72, 0, 3, 3, 226, 96, 201, 62, 215, 19, 203, 62, 156, 86, 84, 191, 176, 29, 129, 188, 75, 0, 3, 7, 128, 163, 128, 62, 25, 191, 158, 62, 72, 187, 106, 191, 222, 21, 188, 187, 78, 0, 3, 7, 0, 120, 136, 62, 182, 85, 131, 61, 47, 49, 118, 191, 16, 195, 167, 186, 81, 0, 3, 7, 228, 99, 211, 183, 92, 11, 153, 183, 0, 0, 128, 191, 137, 78, 247, 59, 84, 0, 5, 8, 40, 25, 112, 62, 127, 102, 83, 62, 224, 47, 115, 191, 60, 49, 35, 187, 89, 0, 3, 7, 51, 11, 41, 62, 4, 240, 245, 62, 232, 132, 92, 63, 198, 217, 51, 189, 92, 0, 4, 4, 0, 25, 142, 62, 252, 221, 214, 62, 214, 60, 93, 63, 105, 70, 68, 189, 96, 0, 3, 4, 210, 138, 223, 62, 69, 119, 37, 63, 96, 51, 32, 63, 245, 60, 102, 189, 99, 0, 3, 4, 10, 224, 135, 62, 184, 54, 105, 63, 191, 163, 161, 62, 9, 22, 65, 189, 102, 0, 3, 4, 11, 96, 100, 61, 209, 228, 87, 63, 48, 212, 8, 63, 174, 12, 37, 189, 105, 0, 3, 4, 110, 83, 130, 62, 130, 126, 93, 191, 2, 46, 221, 62, 127, 242, 68, 189, 108, 0, 3, 2, 230, 216, 200, 62, 95, 89, 37, 191, 165, 169, 39, 63, 122, 124, 95, 189, 111, 0, 3, 2, 42, 205, 140, 62, 254, 166, 219, 190, 149, 68, 92, 63, 174, 78, 68, 189, 114, 0, 3, 2, 174, 106, 43, 62, 153, 170, 246, 190, 112, 51, 92, 63, 217, 83, 52, 189, 117, 0, 4, 2, 52, 46, 142, 61, 44, 171, 81, 191, 41, 206, 17, 63, 49, 79, 40, 189, 121, 0, 3, 2, 79, 238, 30, 63, 67, 202, 56, 63, 98, 149, 156, 190, 132, 214, 58, 189, 124, 0, 3, 3, 36, 87, 89, 63, 40, 189, 4, 63, 16, 139, 208, 61, 59, 243, 124, 189, 127, 0, 3, 4, 142, 43, 116, 63, 171, 227, 56, 62, 233, 240, 117, 190, 58, 44, 83, 189, 130, 0, 3, 3, 194, 176, 86, 63, 214, 141, 177, 62, 54, 15, 215, 190, 82, 175, 58, 189, 133, 0, 3, 3, 186, 195, 53, 63, 106, 92, 45, 60, 45, 64, 52, 63, 58, 75, 104, 189, 136, 0, 3, 4, 64, 35, 22, 63, 84, 186, 42, 190, 64, 233, 74, 63, 60, 21, 102, 189, 139, 0, 3, 2, 53, 195, 87, 63, 235, 84, 239, 190, 16, 145, 136, 62, 216, 141, 131, 189, 142, 0, 3, 2, 54, 94, 125, 63, 38, 39, 18, 187, 240, 112, 18, 62, 30, 185, 111, 189, 145, 0, 3, 2, 82, 19, 41, 63, 160, 14, 46, 191, 160, 35, 163, 190, 251, 81, 61, 189, 148, 0, 3, 0, 222, 109, 134, 62, 1, 139, 111, 191, 235, 61, 113, 190, 42, 244, 12, 189, 151, 0, 3, 0, 10, 200, 248, 61, 89, 164, 113, 191, 157, 51, 157, 190, 55, 202, 213, 188, 154, 0, 3, 0, 147, 130, 237, 62, 36, 30, 1, 191, 1, 114, 58, 191, 70, 155, 194, 188, 157, 0, 3, 0, 6, 0, 2, 4, 3, 7, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4, 10, 9, 5, 4, 11, 12, 10, 13, 9, 10, 14, 13, 15, 14, 15, 16, 17, 1, 18, 17, 18, 19, 17, 2, 1, 20, 21, 15, 20, 15, 13, 20, 13, 10, 20, 10, 12, 20, 12, 19, 22, 21, 18, 22, 8, 21, 23, 11, 10, 23, 10, 4, 24, 2, 17, 24, 17, 19, 24, 19, 12, 24, 12, 2, 25, 12, 11, 11, 23, 4, 2, 25, 25, 2, 12, 26, 0, 6, 8, 26, 8, 22, 26, 22, 18, 26, 18, 1, 26, 1, 0, 27, 5, 14, 27, 14, 16, 27, 16, 8, 27, 8, 7, 3, 27, 3, 5, 28, 19, 18, 28, 18, 21, 28, 21, 20, 28, 20, 19, 29, 21, 8, 29, 8, 16, 29, 16, 15, 29, 15, 21, 30, 13, 14, 30, 14, 5, 30, 5, 9, 30, 9, 13, 0, 29, 0, 1, 0, 27, 0, 2, 0, 37, 0, 3, 1, 33, 1, 12, 2, 5, 2, 38, 3, 37, 3, 29, 4, 5, 4, 21, 4, 7, 5, 49, 6, 26, 6, 16, 6, 20, 7, 50, 7, 15, 8, 47, 8, 14, 8, 9, 9, 45, 9, 35, 10, 12, 10, 32, 10, 11, 11, 39, 11, 23, 12, 22, 13, 41, 13, 46, 13, 14, 14, 15, 15, 16, 16, 17, 17, 24, 17, 42, 18, 19, 18, 40, 18, 31, 19, 30, 19, 43, 20, 27, 20, 21, 21, 27, 22, 25, 22, 23, 23, 24, 24, 25, 25, 28, 26, 28, 26, 27, 27, 28, 29, 33, 29, 30, 30, 31, 31, 32, 32, 33, 34, 38, 34, 48, 34, 35, 35, 36, 36, 44, 36, 37, 37, 38, 39, 42, 39, 40, 40, 41, 41, 42, 43, 46, 43, 44, 44, 45, 45, 46, 47, 50, 47, 48, 48, 49, 49, 50, 0, 1, 29, 1, 10, 12, 0, 1, 12, 0, 2, 37, 0, 2, 4, 2, 5, 34, 0, 3, 29, 0, 3, 37, 3, 19, 29, 4, 5, 7, 4, 6, 7, 6, 20, 26, 6, 16, 17, 7, 8, 14, 8, 9, 34, 8, 9, 13, 9, 35, 36, 10, 11, 12, 10, 11, 18, 11, 17, 23, 13, 14, 15, 13, 18, 19, 18, 19, 30, 20, 21, 27, 22, 23, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 39, 40, 41, 43, 44, 45, 47, 48, 49, 6, 0, 0, 0, 0, 0, 2, 0, 2, 0, 4, 0, 4, 0, 3, 0, 3, 0, 7, 0, 7, 0, 6, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 5, 0, 5, 0, 3, 0, 7, 0, 8, 0, 8, 0, 6, 0, 9, 0, 4, 0, 4, 0, 10, 0, 10, 0, 9, 0, 9, 0, 5, 0, 11, 0, 12, 0, 12, 0, 10, 0, 10, 0, 11, 0, 13, 0, 9, 0, 10, 0, 13, 0, 14, 0, 13, 0, 13, 0, 15, 0, 15, 0, 14, 0, 15, 0, 16, 0, 16, 0, 14, 0, 17, 0, 1, 0, 1, 0, 18, 0, 18, 0, 17, 0, 18, 0, 19, 0, 19, 0, 17, 0, 17, 0, 2, 0, 20, 0, 21, 0, 21, 0, 15, 0, 15, 0, 20, 0, 13, 0, 20, 0, 10, 0, 20, 0, 12, 0, 20, 0, 12, 0, 19, 0, 19, 0, 20, 0, 22, 0, 21, 0, 21, 0, 18, 0, 18, 0, 22, 0, 22, 0, 8, 0, 8, 0, 21, 0, 23, 0, 11, 0, 10, 0, 23, 0, 4, 0, 23, 0, 24, 0, 2, 0, 17, 0, 24, 0, 19, 0, 24, 0, 12, 0, 24, 0, 12, 0, 2, 0, 25, 0, 12, 0, 11, 0, 25, 0, 2, 0, 25, 0, 26, 0, 0, 0, 8, 0, 26, 0, 22, 0, 26, 0, 18, 0, 26, 0, 1, 0, 26, 0, 27, 0, 5, 0, 5, 0, 14, 0, 14, 0, 27, 0, 16, 0, 27, 0, 16, 0, 8, 0, 8, 0, 27, 0, 3, 0, 27, 0, 28, 0, 19, 0, 18, 0, 28, 0, 21, 0, 28, 0, 20, 0, 28, 0, 29, 0, 21, 0, 8, 0, 29, 0, 16, 0, 29, 0, 15, 0, 29, 0, 30, 0, 13, 0, 14, 0, 30, 0, 5, 0, 30, 0, 9, 0, 30, 0, 0, 0, 0, 0, 209, 222, 149, 60, 39, 207, 239, 188, 216, 69, 247, 59, 16, 55, 100, 61, 215, 206, 239, 60, 78, 252, 51, 61, 77, 50, 73, 56, 178, 6, 41, 51, 68, 27, 43, 174, 252, 53, 34, 179, 68, 27, 43, 174, 110, 26, 191, 51, 219, 115, 11, 44, 252, 53, 34, 179, 219, 115, 11, 44, 102, 179, 149, 51, 31, 215, 10, 61, 96, 236, 179, 55, 53, 41, 191, 60, 0, 0, 128, 191, 0, 0, 128, 191, 50, 218, 105, 60, 197, 3, 7, 60, 75, 41, 166, 60, 197, 3, 7, 60]
                    matrix4d xformOp:transform = ( (-1.6292067375187122e-7, 0.9999999776482584, 0, 0), (-0.9999999776482584, -1.6292067375187122e-7, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "ID4_000frA" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (-1.6292067375187122e-7, 0.9999999776482584, 0, 0), (-0.9999999776482584, -1.6292067375187122e-7, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "ID4_000jEI" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (-1.6292067375187122e-7, 0.9999999776482584, 0, 0), (-0.9999999776482584, -1.6292067375187122e-7, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "realsense_camera"
                {
                    float2 clippingRange = (0.01, 10000)
                    float focalLength = 0.019299999
                    float focusDistance = 4
                    float horizontalAperture = 0.026819998
                    float horizontalApertureOffset = 0
                    float verticalAperture = 0.015089999
                    float verticalApertureOffset = 0
                    token visibility = "invisible"
                    double3 xformOp:translate = (0, 0.04999999888241291, 0.04999999888241291)
                }
            }

            over "panda_hand"
            {
                double3 xformOp:translate = (0, 0, 0)

                over "ID234_001frA" (
                    prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
                )
                {
                    float physxConvexHullCollision:minThickness = 0.000010000001
                    uchar[] physxCookedData:convexHull:buffer = [9, 192, 14, 153, 109, 202, 253, 95, 82, 167, 28, 107, 172, 64, 176, 100, 120, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 53, 128, 0, 0, 23, 0, 0, 0, 106, 0, 0, 0, 119, 76, 188, 59, 220, 97, 138, 189, 181, 206, 188, 188, 173, 133, 186, 59, 118, 15, 54, 189, 194, 179, 157, 188, 7, 241, 186, 59, 157, 111, 54, 189, 101, 36, 192, 188, 72, 143, 18, 59, 8, 66, 178, 189, 228, 91, 157, 60, 48, 103, 49, 187, 159, 111, 54, 189, 174, 8, 131, 188, 92, 220, 114, 58, 38, 215, 176, 189, 131, 124, 168, 60, 80, 253, 117, 59, 157, 111, 54, 189, 206, 13, 134, 188, 7, 19, 24, 59, 19, 188, 202, 189, 54, 103, 135, 60, 48, 49, 218, 58, 104, 54, 213, 189, 190, 109, 27, 60, 68, 121, 183, 59, 21, 0, 166, 189, 232, 55, 188, 188, 0, 143, 242, 58, 231, 8, 214, 189, 96, 141, 151, 187, 144, 18, 191, 58, 254, 253, 213, 189, 224, 67, 10, 188, 64, 204, 177, 57, 26, 129, 199, 189, 69, 46, 153, 60, 62, 36, 90, 186, 20, 135, 176, 189, 228, 2, 167, 60, 0, 95, 104, 57, 162, 65, 178, 189, 126, 147, 172, 60, 196, 215, 146, 187, 160, 111, 54, 189, 0, 204, 201, 188, 114, 72, 182, 187, 162, 111, 54, 189, 58, 211, 171, 188, 64, 87, 50, 187, 159, 111, 54, 189, 136, 183, 212, 188, 32, 122, 76, 59, 158, 111, 54, 189, 238, 177, 212, 188, 48, 72, 6, 187, 188, 22, 203, 189, 230, 111, 133, 60, 96, 64, 244, 186, 169, 7, 211, 189, 96, 111, 51, 60, 4, 240, 234, 186, 10, 66, 178, 189, 33, 204, 158, 60, 131, 156, 178, 187, 232, 146, 166, 189, 178, 198, 168, 188, 160, 124, 145, 186, 238, 136, 178, 189, 158, 240, 219, 188, 84, 161, 252, 58, 200, 219, 201, 189, 224, 150, 144, 188, 232, 103, 138, 59, 249, 142, 176, 189, 51, 123, 198, 188, 168, 135, 243, 58, 62, 139, 174, 189, 164, 107, 217, 188, 0, 25, 29, 185, 48, 15, 202, 189, 56, 138, 151, 188, 116, 164, 161, 187, 98, 191, 171, 189, 159, 111, 196, 188, 88, 255, 201, 186, 9, 10, 212, 189, 0, 27, 172, 187, 0, 38, 34, 186, 191, 216, 212, 189, 4, 81, 41, 188, 32, 112, 101, 186, 118, 2, 206, 189, 244, 61, 129, 188, 157, 236, 166, 181, 0, 0, 128, 63, 155, 170, 211, 179, 158, 111, 54, 61, 0, 0, 8, 10, 23, 84, 140, 185, 211, 27, 79, 191, 248, 120, 22, 63, 104, 233, 183, 189, 8, 0, 5, 17, 67, 143, 26, 191, 46, 123, 207, 187, 0, 18, 76, 191, 48, 86, 185, 188, 13, 0, 4, 5, 21, 241, 126, 191, 98, 140, 10, 187, 241, 249, 185, 61, 111, 103, 116, 187, 17, 0, 3, 2, 208, 52, 127, 63, 147, 135, 43, 188, 111, 182, 159, 61, 182, 255, 151, 187, 20, 0, 5, 16, 33, 169, 123, 191, 123, 49, 59, 190, 250, 86, 101, 188, 171, 15, 168, 188, 25, 0, 3, 1, 153, 148, 119, 63, 103, 25, 111, 190, 22, 152, 206, 189, 70, 99, 218, 188, 28, 0, 5, 16, 238, 128, 78, 191, 239, 77, 188, 62, 90, 224, 236, 62, 164, 237, 176, 60, 33, 0, 4, 25, 121, 151, 64, 63, 56, 79, 208, 62, 154, 166, 4, 63, 144, 199, 194, 60, 37, 0, 4, 28, 79, 73, 50, 63, 31, 71, 59, 188, 57, 176, 55, 191, 65, 150, 174, 188, 41, 0, 6, 13, 43, 102, 143, 190, 17, 174, 117, 191, 248, 111, 193, 60, 13, 31, 204, 189, 47, 0, 6, 2, 151, 255, 127, 63, 159, 176, 242, 58, 253, 212, 68, 59, 253, 237, 181, 187, 53, 0, 3, 16, 245, 86, 43, 63, 106, 226, 33, 190, 1, 218, 57, 63, 136, 57, 239, 188, 56, 0, 5, 15, 6, 166, 47, 61, 173, 135, 40, 63, 83, 99, 64, 63, 87, 208, 41, 61, 61, 0, 5, 27, 131, 68, 125, 63, 157, 44, 20, 190, 208, 125, 140, 60, 158, 59, 138, 188, 66, 0, 4, 16, 223, 246, 63, 191, 217, 148, 219, 190, 196, 246, 0, 191, 221, 241, 83, 189, 70, 0, 4, 1, 226, 2, 127, 62, 115, 253, 81, 191, 51, 209, 3, 191, 198, 44, 185, 189, 74, 0, 5, 4, 163, 107, 33, 191, 243, 196, 55, 190, 89, 79, 65, 63, 218, 144, 0, 189, 79, 0, 5, 18, 109, 126, 117, 191, 11, 167, 189, 187, 111, 36, 145, 190, 2, 11, 61, 188, 84, 0, 4, 3, 189, 93, 160, 188, 156, 43, 114, 60, 71, 236, 127, 191, 199, 188, 206, 188, 88, 0, 4, 14, 140, 186, 126, 191, 22, 123, 134, 189, 131, 50, 153, 61, 176, 29, 23, 188, 92, 0, 5, 2, 53, 57, 1, 63, 182, 55, 244, 190, 45, 49, 56, 191, 177, 145, 120, 189, 97, 0, 5, 13, 179, 106, 112, 191, 219, 36, 159, 190, 44, 226, 21, 190, 125, 228, 12, 189, 102, 0, 4, 1, 1, 2, 18, 17, 15, 16, 4, 6, 7, 12, 19, 20, 8, 23, 28, 15, 17, 21, 16, 22, 0, 1, 3, 7, 9, 29, 20, 28, 10, 11, 24, 25, 9, 4, 16, 21, 13, 5, 3, 1, 6, 2, 0, 9, 25, 26, 18, 11, 10, 8, 20, 29, 30, 1, 0, 2, 12, 7, 3, 5, 14, 4, 13, 14, 5, 6, 7, 8, 10, 9, 27, 31, 28, 23, 24, 11, 30, 31, 27, 19, 12, 14, 13, 21, 15, 28, 22, 16, 23, 17, 18, 26, 20, 19, 21, 22, 28, 25, 24, 27, 23, 26, 29, 28, 31, 30, 4, 11, 9, 11, 4, 9, 0, 11, 4, 8, 0, 8, 0, 9, 8, 12, 4, 12, 0, 13, 7, 13, 0, 7, 8, 13, 12, 13, 1, 14, 4, 14, 1, 12, 10, 14, 1, 10, 6, 14, 6, 9, 6, 10, 6, 16, 10, 16, 12, 17, 1, 17, 13, 17, 7, 17, 0, 18, 0, 2, 2, 18, 3, 7, 3, 18, 0, 19, 2, 19, 9, 19, 1, 20, 17, 20, 5, 20, 5, 10, 3, 20, 18, 20, 19, 21, 15, 21, 2, 15, 6, 21, 16, 21, 9, 21, 15, 16, 5, 22, 15, 22, 10, 22, 16, 22, 4, 9, 11, 0, 4, 8, 0, 9, 11, 4, 8, 12, 0, 7, 13, 8, 12, 13, 0, 8, 13, 1, 4, 12, 1, 10, 14, 4, 6, 9, 6, 10, 14, 6, 10, 16, 1, 12, 17, 7, 13, 17, 12, 13, 17, 0, 2, 18, 0, 3, 7, 0, 2, 19, 0, 9, 19, 1, 17, 20, 1, 5, 10, 3, 7, 17, 3, 18, 20, 2, 15, 19, 6, 16, 21, 6, 9, 21, 9, 19, 21, 15, 16, 21, 2, 5, 15, 5, 10, 22, 10, 16, 22, 15, 16, 22, 0, 0, 1, 0, 2, 0, 0, 0, 9, 0, 0, 0, 1, 0, 2, 0, 1, 0, 3, 0, 6, 0, 1, 0, 2, 0, 18, 0, 5, 0, 3, 0, 3, 0, 7, 0, 4, 0, 6, 0, 13, 0, 4, 0, 16, 0, 4, 0, 6, 0, 5, 0, 5, 0, 14, 0, 8, 0, 7, 0, 7, 0, 9, 0, 7, 0, 12, 0, 10, 0, 8, 0, 20, 0, 8, 0, 9, 0, 10, 0, 25, 0, 9, 0, 10, 0, 11, 0, 11, 0, 24, 0, 30, 0, 11, 0, 14, 0, 12, 0, 12, 0, 19, 0, 13, 0, 14, 0, 21, 0, 13, 0, 15, 0, 16, 0, 17, 0, 15, 0, 28, 0, 15, 0, 21, 0, 16, 0, 16, 0, 22, 0, 18, 0, 17, 0, 17, 0, 23, 0, 26, 0, 18, 0, 19, 0, 20, 0, 21, 0, 19, 0, 20, 0, 28, 0, 29, 0, 20, 0, 22, 0, 21, 0, 28, 0, 22, 0, 26, 0, 23, 0, 23, 0, 27, 0, 23, 0, 28, 0, 24, 0, 25, 0, 27, 0, 24, 0, 25, 0, 26, 0, 27, 0, 31, 0, 28, 0, 29, 0, 31, 0, 28, 0, 29, 0, 30, 0, 30, 0, 31, 0, 0, 0, 0, 0, 114, 72, 182, 187, 231, 8, 214, 189, 158, 240, 219, 188, 118, 76, 188, 59, 118, 15, 54, 189, 126, 147, 172, 60, 97, 54, 105, 55, 68, 144, 182, 51, 206, 146, 21, 47, 130, 226, 110, 45, 206, 146, 21, 47, 177, 204, 76, 49, 153, 53, 23, 178, 130, 226, 110, 45, 153, 53, 23, 178, 24, 134, 176, 51, 208, 203, 11, 57, 60, 141, 154, 189, 205, 122, 26, 188, 0, 0, 128, 191, 0, 0, 128, 191, 90, 217, 145, 59, 119, 105, 40, 59, 40, 11, 164, 60, 119, 105, 40, 59]
                    matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "ID234_001m4u" (
                    prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
                )
                {
                    float physxConvexHullCollision:minThickness = 0.000010000001
                    uchar[] physxCookedData:convexHull:buffer = [9, 26, 142, 54, 149, 133, 42, 14, 233, 165, 89, 205, 233, 216, 37, 63, 255, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 32, 0, 0, 0, 54, 128, 0, 0, 24, 0, 0, 0, 108, 0, 0, 0, 11, 222, 230, 188, 192, 211, 43, 61, 128, 169, 164, 187, 42, 247, 211, 60, 238, 33, 152, 61, 174, 204, 197, 187, 94, 78, 136, 60, 197, 36, 211, 189, 200, 28, 33, 61, 128, 253, 171, 58, 165, 41, 211, 189, 204, 72, 111, 188, 124, 144, 111, 188, 6, 199, 169, 189, 83, 46, 31, 188, 128, 49, 54, 187, 130, 155, 200, 189, 30, 80, 110, 188, 190, 137, 211, 188, 249, 27, 159, 61, 201, 36, 206, 187, 255, 5, 180, 188, 15, 71, 154, 61, 116, 26, 1, 188, 145, 40, 137, 188, 152, 70, 174, 189, 181, 155, 134, 61, 136, 153, 143, 188, 99, 250, 179, 189, 66, 95, 121, 61, 161, 23, 138, 60, 183, 36, 211, 189, 84, 73, 66, 61, 211, 155, 139, 60, 82, 242, 180, 189, 156, 153, 133, 61, 250, 194, 148, 60, 231, 89, 189, 189, 125, 254, 111, 61, 236, 2, 130, 60, 194, 255, 205, 61, 30, 162, 133, 61, 141, 186, 183, 60, 13, 2, 206, 61, 18, 141, 150, 59, 20, 174, 140, 60, 172, 49, 184, 61, 50, 152, 133, 61, 58, 162, 215, 60, 4, 82, 129, 61, 64, 19, 50, 60, 78, 210, 202, 60, 80, 148, 177, 61, 176, 5, 113, 187, 129, 24, 236, 60, 168, 93, 30, 61, 165, 150, 132, 187, 207, 117, 141, 60, 56, 57, 173, 189, 224, 41, 7, 187, 168, 37, 50, 59, 134, 251, 206, 189, 80, 241, 108, 188, 8, 240, 91, 188, 162, 46, 211, 189, 0, 53, 85, 61, 128, 224, 63, 187, 13, 43, 211, 189, 112, 40, 9, 188, 190, 62, 136, 188, 46, 234, 178, 189, 240, 252, 99, 186, 104, 23, 134, 188, 198, 213, 202, 189, 200, 249, 78, 61, 66, 129, 131, 188, 80, 245, 205, 61, 255, 149, 134, 61, 154, 186, 130, 188, 125, 245, 205, 61, 219, 193, 216, 59, 126, 164, 202, 188, 27, 124, 175, 61, 0, 229, 216, 186, 224, 242, 50, 60, 174, 38, 211, 189, 90, 93, 101, 61, 56, 26, 68, 188, 43, 46, 211, 189, 40, 190, 97, 61, 240, 51, 82, 60, 10, 2, 191, 189, 205, 185, 133, 61, 160, 196, 86, 188, 67, 7, 188, 189, 244, 127, 134, 61, 134, 137, 35, 58, 252, 255, 127, 191, 191, 28, 155, 182, 26, 42, 211, 189, 0, 0, 7, 14, 136, 137, 35, 186, 253, 255, 127, 63, 193, 28, 155, 54, 182, 250, 205, 189, 7, 0, 4, 29, 194, 181, 110, 60, 180, 88, 150, 54, 11, 249, 127, 63, 244, 23, 134, 189, 11, 0, 7, 5, 54, 111, 124, 63, 170, 240, 60, 186, 51, 79, 42, 62, 237, 16, 227, 188, 18, 0, 5, 0, 62, 161, 117, 191, 202, 255, 192, 189, 199, 240, 135, 190, 82, 15, 200, 188, 23, 0, 3, 15, 239, 199, 126, 63, 81, 239, 191, 189, 178, 122, 219, 188, 17, 45, 206, 188, 26, 0, 5, 6, 84, 193, 125, 191, 105, 45, 142, 61, 53, 67, 230, 61, 104, 18, 248, 188, 31, 0, 4, 18, 177, 241, 126, 191, 58, 46, 183, 189, 110, 138, 121, 188, 131, 205, 199, 188, 35, 0, 4, 17, 192, 209, 43, 61, 90, 135, 66, 62, 214, 27, 123, 191, 173, 255, 172, 188, 39, 0, 3, 31, 29, 179, 124, 191, 151, 43, 135, 57, 128, 229, 35, 62, 179, 99, 221, 188, 42, 0, 4, 18, 172, 2, 223, 62, 40, 220, 105, 188, 57, 105, 102, 191, 114, 37, 128, 188, 46, 0, 3, 25, 145, 95, 197, 190, 162, 71, 236, 187, 225, 52, 108, 191, 146, 4, 121, 188, 49, 0, 5, 15, 231, 252, 126, 63, 64, 255, 171, 61, 138, 45, 237, 60, 165, 102, 2, 189, 54, 0, 4, 0, 173, 94, 33, 61, 13, 43, 47, 61, 29, 145, 127, 191, 125, 123, 39, 188, 58, 0, 5, 31, 250, 20, 79, 63, 88, 138, 10, 191, 42, 70, 107, 190, 185, 164, 118, 189, 63, 0, 4, 25, 9, 89, 70, 191, 64, 180, 243, 190, 141, 9, 213, 190, 169, 149, 96, 189, 67, 0, 5, 13, 55, 6, 59, 189, 195, 118, 1, 63, 147, 138, 92, 191, 14, 245, 59, 189, 72, 0, 6, 30, 29, 110, 79, 191, 227, 24, 226, 190, 223, 68, 197, 62, 89, 155, 156, 189, 78, 0, 6, 14, 47, 151, 44, 63, 237, 124, 18, 191, 98, 20, 239, 62, 208, 116, 189, 189, 84, 0, 5, 27, 69, 169, 124, 63, 252, 217, 246, 61, 243, 135, 218, 61, 248, 85, 14, 189, 89, 0, 5, 23, 91, 190, 53, 63, 229, 90, 159, 189, 59, 48, 51, 191, 249, 42, 166, 188, 94, 0, 3, 25, 151, 73, 71, 191, 19, 233, 28, 191, 216, 138, 10, 190, 67, 107, 136, 189, 97, 0, 4, 13, 107, 239, 91, 191, 138, 254, 2, 63, 57, 10, 15, 188, 35, 89, 133, 189, 101, 0, 3, 10, 173, 54, 227, 188, 0, 19, 47, 191, 235, 163, 58, 63, 162, 100, 227, 189, 104, 0, 4, 14, 2, 10, 28, 29, 21, 22, 3, 25, 13, 14, 26, 30, 11, 15, 13, 25, 8, 31, 15, 11, 12, 18, 16, 23, 0, 4, 18, 12, 10, 2, 19, 27, 6, 0, 25, 24, 9, 0, 23, 17, 1, 7, 8, 25, 0, 9, 20, 1, 18, 4, 0, 6, 7, 5, 16, 18, 1, 17, 5, 7, 1, 20, 3, 2, 3, 20, 19, 3, 22, 23, 4, 5, 26, 14, 17, 7, 6, 27, 21, 29, 31, 8, 9, 24, 28, 10, 12, 11, 30, 14, 13, 15, 16, 17, 18, 19, 20, 22, 21, 24, 23, 25, 26, 27, 29, 28, 30, 31, 4, 11, 6, 11, 7, 9, 4, 7, 6, 9, 8, 13, 8, 12, 10, 12, 10, 13, 0, 14, 0, 5, 5, 14, 13, 15, 13, 14, 0, 15, 11, 15, 4, 15, 11, 13, 11, 16, 6, 16, 8, 16, 9, 17, 2, 9, 2, 17, 7, 17, 5, 18, 0, 18, 3, 18, 2, 3, 2, 18, 3, 5, 1, 19, 2, 19, 1, 2, 16, 19, 1, 16, 3, 19, 12, 19, 3, 12, 5, 20, 10, 20, 14, 20, 0, 21, 17, 21, 0, 17, 15, 21, 7, 21, 1, 22, 6, 22, 16, 22, 0, 23, 18, 23, 17, 23, 2, 23, 4, 6, 7, 8, 10, 12, 0, 5, 14, 0, 13, 14, 4, 11, 15, 11, 13, 15, 6, 11, 16, 8, 11, 13, 2, 9, 17, 7, 9, 17, 0, 5, 18, 2, 3, 18, 3, 5, 18, 1, 2, 19, 1, 16, 19, 2, 3, 19, 3, 12, 19, 8, 12, 16, 3, 5, 10, 5, 14, 20, 10, 13, 14, 0, 17, 21, 0, 15, 21, 4, 7, 15, 7, 17, 21, 1, 2, 6, 1, 16, 22, 6, 16, 22, 0, 18, 23, 0, 17, 23, 2, 18, 23, 2, 17, 23, 0, 0, 4, 0, 6, 0, 0, 0, 9, 0, 0, 0, 23, 0, 0, 0, 0, 0, 25, 0, 1, 0, 7, 0, 17, 0, 1, 0, 1, 0, 18, 0, 20, 0, 1, 0, 3, 0, 2, 0, 2, 0, 10, 0, 2, 0, 19, 0, 3, 0, 5, 0, 20, 0, 3, 0, 22, 0, 3, 0, 5, 0, 4, 0, 4, 0, 23, 0, 7, 0, 5, 0, 6, 0, 7, 0, 27, 0, 6, 0, 7, 0, 17, 0, 9, 0, 8, 0, 25, 0, 8, 0, 8, 0, 31, 0, 24, 0, 9, 0, 12, 0, 10, 0, 10, 0, 28, 0, 11, 0, 12, 0, 11, 0, 15, 0, 30, 0, 11, 0, 12, 0, 18, 0, 13, 0, 14, 0, 15, 0, 13, 0, 25, 0, 13, 0, 14, 0, 17, 0, 14, 0, 26, 0, 16, 0, 15, 0, 17, 0, 16, 0, 18, 0, 16, 0, 19, 0, 18, 0, 18, 0, 20, 0, 20, 0, 19, 0, 21, 0, 22, 0, 24, 0, 21, 0, 29, 0, 21, 0, 22, 0, 23, 0, 23, 0, 24, 0, 26, 0, 25, 0, 25, 0, 27, 0, 27, 0, 26, 0, 28, 0, 29, 0, 30, 0, 28, 0, 29, 0, 31, 0, 31, 0, 30, 0, 0, 0, 0, 0, 11, 222, 230, 188, 162, 46, 211, 189, 202, 72, 111, 188, 129, 24, 236, 60, 14, 2, 206, 61, 181, 155, 134, 61, 17, 137, 34, 58, 117, 173, 49, 54, 59, 127, 247, 176, 26, 212, 207, 177, 59, 127, 247, 176, 77, 191, 89, 53, 176, 80, 8, 179, 26, 212, 207, 177, 176, 80, 8, 179, 48, 218, 7, 54, 181, 52, 153, 57, 64, 14, 228, 58, 175, 235, 218, 60, 0, 0, 128, 191, 0, 0, 128, 191, 53, 78, 188, 60, 190, 111, 89, 60, 246, 115, 198, 61, 190, 111, 89, 60]
                    matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "ID234_001" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }

                over "ID234_001jEI" (
                    prepend apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    matrix4d xformOp:transform = ( (0.9999999776482714, 0, 0, 0), (0, 0.9999999776482714, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
                }
            }
        }

        def Xform "tool_center"
        {
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0.1034)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Xform "panda_leftfinger" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (4.2041304e-10, 3.9026365e-10, 1.3347495e-10)
        bool physics:kinematicEnabled = 0
        float physics:mass = 0.014055223
        bool physics:rigidBodyEnabled = 1
        uniform bool physics:startsAsleep = 0
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:angularDamping = 0.05
        bool physxRigidBody:disableGravity = 0
        bool physxRigidBody:enableCCD = 0
        bool physxRigidBody:enableSpeculativeCCD = 0
        float physxRigidBody:linearDamping = 0
        int physxRigidBody:lockedPosAxis = 0
        int physxRigidBody:lockedRotAxis = 0
        float physxRigidBody:maxAngularVelocity = 100
        float physxRigidBody:maxContactImpulse = inf
        float physxRigidBody:maxDepenetrationVelocity = inf
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 0.5
        int physxRigidBody:solverPositionIterationCount = 4
        int physxRigidBody:solverVelocityIterationCount = 1
        float physxRigidBody:stabilizationThreshold = 0.0009999999
        quatf xformOp:orient = (6.123234e-17, 0.9238795, 0.3826835, -1.360657e-16)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.08799997, -4.2319297e-8, 0.8675999)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "geometry" (
            prepend references = @DetailedProps/panda_leftfinger_flex.usd@
        )
        {
            rel collisionGroup
            rel physicsMaterial
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1.0000002, 0.99999994, 1.0000001)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "panda_leftfinger" (
                prepend apiSchemas = ["PhysicsMeshCollisionAPI", "PhysxConvexDecompositionCollisionAPI"]
            )
            {
                rel collisionGroup
                uniform token physics:approximation = "convexDecomposition"
                rel physicsMaterial
            }

            over "ID27" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                matrix4d xformOp:transform = ( (0.9999999776482592, 0, 0, 0), (0, 0.9999999776482592, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID27SVM" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                matrix4d xformOp:transform = ( (0.9999999776482592, 0, 0, 0), (0, 0.9999999776482592, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID27fa3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482592, 0, 0, 0), (0, 0.9999999776482592, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }
        }
    }

    def Xform "panda_rightfinger" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxRigidBodyAPI"]
        instanceable = false
    )
    {
        vector3f physics:angularVelocity = (0, 0, 0)
        point3f physics:centerOfMass = (0, 0, 0)
        float3 physics:diagonalInertia = (4.2041304e-10, 3.9026365e-10, 1.3347495e-10)
        float physics:mass = 0.014055223
        vector3f physics:velocity = (0, 0, 0)
        float physxRigidBody:maxDepenetrationVelocity = 0.049999997
        float physxRigidBody:maxLinearVelocity = inf
        float physxRigidBody:sleepThreshold = 5e-7
        float physxRigidBody:stabilizationThreshold = 1e-9
        quatf xformOp:orient = (6.123234e-17, 0.9238796, 0.38268325, -4.0496582e-17)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.08799998, -5.9008595e-8, 0.86760014)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "geometry" (
            prepend references = @DetailedProps/panda_rightfinger_flex.usd@
        )
        {
            float3 xformOp:rotateZYX = (0, 0, 180)
            float3 xformOp:scale = (1.0000001, 1.0000013, 1.0000014)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]

            over "panda_rightfinger" (
                prepend apiSchemas = ["PhysicsMeshCollisionAPI", "PhysxConvexDecompositionCollisionAPI"]
            )
            {
                rel collisionGroup
                uniform token physics:approximation = "convexDecomposition"
                rel physicsMaterial
            }

            over Material "FingerMaterial" (
                prepend apiSchemas = ["PhysicsMaterialAPI"]
            )
            {
            }

            over "ID27" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                matrix4d xformOp:transform = ( (0.9999999776482592, 0, 0, 0), (0, 0.9999999776482592, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID27fa3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                matrix4d xformOp:transform = ( (0.9999999776482592, 0, 0, 0), (0, 0.9999999776482592, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }

            over "ID27SVM" (
                prepend apiSchemas = ["MaterialBindingAPI", "PhysxCookedDataAPI:convexHull"]
            )
            {
                float physxCollision:contactOffset = -inf
                float physxCollision:restOffset = -inf
                float physxConvexHullCollision:minThickness = 0.000010000001
                uchar[] physxCookedData:convexHull:buffer = [9, 17, 229, 76, 189, 181, 111, 68, 33, 177, 235, 215, 80, 4, 197, 183, 104, 78, 88, 83, 1, 67, 86, 88, 77, 14, 0, 0, 0, 0, 0, 0, 0, 73, 67, 69, 1, 67, 76, 72, 76, 9, 0, 0, 0, 19, 0, 0, 0, 41, 128, 0, 0, 24, 0, 0, 0, 82, 0, 0, 0, 90, 8, 44, 60, 180, 3, 231, 60, 155, 73, 157, 57, 55, 147, 41, 60, 172, 171, 45, 59, 54, 74, 29, 57, 188, 29, 39, 188, 76, 128, 55, 59, 65, 173, 83, 176, 190, 29, 39, 188, 180, 3, 231, 60, 67, 173, 83, 176, 7, 8, 44, 188, 76, 128, 55, 59, 25, 183, 209, 58, 31, 192, 2, 60, 235, 165, 27, 60, 90, 241, 82, 61, 49, 208, 150, 59, 51, 144, 32, 60, 92, 9, 93, 61, 76, 43, 172, 187, 235, 165, 27, 60, 70, 66, 91, 61, 55, 179, 38, 188, 144, 202, 215, 60, 186, 61, 156, 60, 25, 179, 38, 60, 240, 201, 215, 60, 170, 64, 156, 60, 194, 221, 18, 188, 51, 144, 32, 60, 254, 43, 75, 61, 132, 247, 16, 188, 35, 167, 104, 60, 32, 178, 77, 61, 115, 27, 172, 187, 115, 145, 109, 60, 138, 65, 91, 61, 120, 18, 131, 59, 35, 167, 104, 60, 28, 47, 93, 61, 166, 236, 246, 187, 51, 144, 32, 60, 120, 47, 87, 61, 249, 224, 229, 59, 35, 167, 104, 60, 40, 10, 89, 61, 141, 179, 13, 60, 35, 167, 104, 60, 58, 64, 80, 61, 196, 221, 18, 60, 51, 144, 32, 60, 254, 43, 75, 61, 167, 236, 246, 187, 35, 167, 104, 60, 120, 47, 87, 61, 167, 198, 21, 60, 53, 186, 125, 191, 236, 209, 7, 62, 202, 159, 36, 59, 0, 0, 5, 3, 205, 17, 51, 60, 196, 65, 190, 59, 252, 250, 127, 191, 44, 57, 180, 55, 5, 0, 4, 13, 202, 165, 185, 186, 55, 198, 126, 63, 64, 38, 200, 61, 216, 6, 230, 188, 9, 0, 4, 1, 2, 198, 127, 191, 223, 33, 225, 188, 159, 104, 2, 61, 0, 164, 36, 188, 13, 0, 5, 0, 97, 218, 238, 187, 51, 254, 127, 191, 168, 35, 179, 186, 159, 159, 50, 59, 18, 0, 3, 0, 131, 157, 123, 191, 89, 132, 153, 179, 44, 182, 60, 190, 250, 64, 36, 188, 21, 0, 3, 17, 239, 244, 141, 59, 35, 190, 113, 63, 94, 119, 168, 62, 118, 139, 255, 188, 24, 0, 4, 1, 51, 92, 51, 189, 58, 156, 214, 187, 187, 191, 127, 63, 61, 187, 91, 189, 28, 0, 4, 0, 236, 253, 101, 191, 95, 9, 26, 189, 250, 6, 224, 62, 41, 192, 240, 188, 32, 0, 3, 0, 68, 142, 154, 190, 93, 35, 113, 191, 30, 140, 22, 62, 240, 40, 73, 186, 35, 0, 3, 0, 71, 67, 67, 190, 86, 144, 120, 191, 223, 0, 20, 62, 176, 100, 254, 57, 38, 0, 3, 0, 249, 197, 162, 62, 49, 139, 18, 61, 166, 139, 114, 63, 89, 217, 88, 189, 41, 0, 3, 2, 223, 105, 19, 63, 61, 81, 12, 190, 26, 86, 78, 63, 193, 130, 55, 189, 44, 0, 3, 3, 175, 156, 75, 63, 253, 6, 233, 188, 20, 0, 27, 63, 109, 156, 24, 189, 47, 0, 3, 3, 253, 143, 227, 62, 139, 86, 84, 63, 136, 59, 173, 62, 236, 114, 6, 189, 50, 0, 3, 2, 116, 158, 236, 61, 253, 132, 110, 63, 128, 74, 176, 62, 10, 62, 4, 189, 53, 0, 3, 2, 91, 223, 127, 63, 231, 88, 51, 188, 245, 115, 242, 60, 140, 22, 41, 188, 56, 0, 4, 3, 76, 15, 127, 63, 146, 22, 86, 61, 198, 232, 138, 61, 81, 215, 81, 188, 60, 0, 3, 4, 82, 218, 99, 63, 255, 242, 129, 189, 61, 33, 231, 62, 244, 178, 243, 188, 63, 0, 3, 3, 165, 51, 5, 63, 174, 206, 87, 191, 230, 189, 11, 62, 210, 222, 79, 187, 66, 0, 3, 3, 28, 189, 94, 191, 7, 180, 166, 179, 101, 96, 252, 62, 212, 236, 4, 189, 69, 0, 3, 0, 118, 119, 204, 190, 200, 111, 146, 57, 87, 179, 106, 63, 35, 159, 81, 189, 72, 0, 4, 1, 15, 206, 137, 190, 242, 249, 101, 63, 161, 193, 177, 62, 43, 68, 7, 189, 76, 0, 3, 1, 166, 194, 16, 191, 7, 144, 66, 63, 182, 5, 164, 62, 26, 152, 2, 189, 79, 0, 3, 1, 4, 1, 5, 6, 7, 0, 1, 2, 3, 8, 9, 0, 3, 10, 11, 8, 3, 4, 2, 1, 4, 2, 4, 3, 12, 13, 9, 8, 12, 7, 6, 13, 14, 11, 10, 14, 10, 4, 14, 4, 7, 15, 13, 6, 15, 6, 5, 15, 5, 16, 15, 16, 9, 15, 9, 13, 17, 1, 0, 9, 17, 9, 16, 17, 16, 5, 17, 5, 1, 18, 11, 14, 18, 14, 7, 12, 18, 12, 8, 18, 8, 11, 0, 4, 0, 19, 0, 12, 0, 7, 0, 10, 1, 16, 1, 4, 1, 5, 1, 2, 2, 6, 2, 16, 2, 3, 3, 8, 3, 23, 3, 5, 3, 9, 4, 5, 6, 7, 6, 15, 6, 22, 7, 21, 7, 11, 8, 20, 8, 9, 9, 10, 10, 21, 11, 15, 11, 12, 12, 13, 13, 18, 13, 14, 14, 17, 14, 15, 16, 19, 16, 17, 17, 18, 18, 19, 20, 23, 20, 21, 21, 22, 22, 23, 1, 2, 16, 0, 1, 4, 1, 4, 5, 1, 2, 3, 0, 3, 4, 0, 12, 13, 0, 7, 11, 0, 7, 10, 2, 3, 6, 2, 6, 14, 3, 8, 9, 3, 8, 20, 6, 7, 21, 6, 7, 11, 8, 9, 10, 11, 12, 13, 13, 14, 17, 16, 17, 18, 20, 21, 22, 4, 0, 1, 0, 1, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 7, 0, 4, 0, 0, 0, 1, 0, 1, 0, 2, 0, 2, 0, 3, 0, 3, 0, 0, 0, 8, 0, 9, 0, 9, 0, 0, 0, 3, 0, 8, 0, 10, 0, 11, 0, 11, 0, 8, 0, 3, 0, 4, 0, 4, 0, 10, 0, 4, 0, 2, 0, 12, 0, 13, 0, 13, 0, 9, 0, 8, 0, 12, 0, 12, 0, 7, 0, 6, 0, 13, 0, 14, 0, 11, 0, 10, 0, 14, 0, 4, 0, 14, 0, 7, 0, 14, 0, 15, 0, 13, 0, 6, 0, 15, 0, 5, 0, 15, 0, 5, 0, 16, 0, 16, 0, 15, 0, 16, 0, 9, 0, 9, 0, 15, 0, 17, 0, 1, 0, 9, 0, 17, 0, 16, 0, 17, 0, 5, 0, 17, 0, 18, 0, 11, 0, 14, 0, 18, 0, 12, 0, 18, 0, 8, 0, 18, 0, 0, 0, 0, 0, 6, 8, 44, 188, 176, 171, 45, 59, 0, 0, 0, 0, 90, 8, 44, 60, 180, 3, 231, 60, 28, 47, 93, 61, 124, 207, 145, 55, 7, 108, 128, 50, 8, 68, 153, 172, 240, 37, 20, 44, 8, 68, 153, 172, 150, 37, 61, 50, 182, 87, 175, 177, 240, 37, 20, 44, 182, 87, 175, 177, 80, 162, 173, 49, 0, 150, 148, 181, 145, 96, 117, 60, 107, 163, 166, 60, 0, 0, 128, 191, 0, 0, 128, 191, 154, 214, 29, 60, 135, 65, 182, 59, 135, 65, 182, 59, 12, 19, 125, 60]
                matrix4d xformOp:transform = ( (0.9999999776482592, 0, 0, 0), (0, 0.9999999776482592, 0, 0), (0, 0, 0.9999999776482582, 0), (0, 0, 0, 1) )
            }
        }
    }

    def PhysicsJoint "rootJoint"
    {
        uniform token articulationType = "articulatedRoot"
        rel physics:body0 = </panda/panda_link0>
        float physics:breakForce = inf
        float physics:breakTorque = inf
        point3f physics:localPos0 = (0, 0, 0)
        point3f physics:localPos1 = (0, 0, 0)
    }
}

def DistantLight "DistantLight"
{
    custom float inputs:intensity = 500
    float intensity = 500
    float3 xformOp:scale = (0.01, 0.01, 0.01)
    uniform token[] xformOpOrder = ["xformOp:scale"]
}

